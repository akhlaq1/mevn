{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/eslint-loader/index.js??ref--13-0!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/store.js","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/store.js","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js","mtime":1560173721326},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/eslint-loader/index.js","mtime":1560173713724}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport UserService from '@/services/UserService';\nimport api from '@/services/RestService';\nimport vm from './main.js';\nVue.use(Vuex);\nvar BASE_URL = \"http://localhost:3000/api/\";\nvar game = {\n  state: {\n    Game: {},\n    Challenge: {\n      oponent: '',\n      challenger: '',\n      error: ''\n    },\n    challenge: {},\n    ChallengeStatus: '',\n    username: ''\n  },\n  mutations: {\n    Set_Game: function Set_Game(state, data) {\n      state.Game = data;\n      console.log(\"game name fuckers:\" + data.Name);\n      var Data = {\n        room: data.Name,\n        token: localStorage.getItem('token')\n      };\n    },\n    Set_Challenge: function Set_Challenge(state, data) {\n      console.log(data);\n      state.challenge = data;\n    },\n    SetChallengeStatus: function SetChallengeStatus(state, data) {\n      state.ChallengeStatus = data;\n    },\n    Set_Challenger: function Set_Challenger(state, data) {\n      state.Challenge.oponent = data.oponent;\n      state.Challenge.challenger = data.challenger;\n    },\n    c_error: function c_error(state, data) {\n      state.error = data;\n    },\n    SetUserName: function SetUserName(state, data) {\n      state.username = data;\n    },\n    ReSetChallenge: function ReSetChallenge(state, data) {\n      state.Challenge = '';\n      state.challenge = '';\n      state.ChallengeStatus = '';\n    }\n  },\n  actions: {\n    AsyncSubmitDispute: function AsyncSubmitDispute(_ref, data) {\n      var commit = _ref.commit;\n      console.log(data);\n      setTimeout(function () {\n        var fd = new FormData();\n        fd.append('DisputeImage', data.DisputeImage);\n        fd.append('challenge_id', data.challenge_id);\n        fd.append('Contact_Source', data.Contact_Source);\n        fd.append('Contact_Details', data.Contact_Details);\n        fd.append('add_comments', data.add_comments);\n        axios.post(BASE_URL + 'registerDispute', fd);\n      }, 1500);\n    },\n    AsyncChallengeStatus: function AsyncChallengeStatus(_ref2, data) {\n      var commit = _ref2.commit;\n      setTimeout(function () {\n        console.log(data);\n        commit('SetChallengeStatus', data);\n      }, 1500);\n    },\n    AsyncSetGame: function AsyncSetGame(_ref3, data) {\n      var commit = _ref3.commit;\n      console.log(\"set name action\");\n      setTimeout(function () {\n        axios.post(BASE_URL + 'getGame', {\n          name: 'Mobile Legends'\n        }).then(function (data) {\n          console.log(\"hello 66 dkasjdklas\");\n          console.log(data);\n          commit('Set_Game', data.data);\n        });\n      }, 1500);\n    },\n    AsyncSetChallenger: function AsyncSetChallenger(_ref4, data) {\n      var commit = _ref4.commit;\n      setTimeout(function () {\n        console.log(\"asjaksjkajsk akjskajs\");\n        console.log(data);\n        commit('Set_Challenger', data);\n      }, 1500);\n    },\n    AsyncStartChallenge: function AsyncStartChallenge(_ref5, data) {\n      var commit = _ref5.commit;\n      setTimeout(function () {\n        console.log(data);\n        axios.post(BASE_URL + 'registerChallenge', {\n          GameName: data.game,\n          Oponent: data.oponent,\n          Challenger: data.challenger,\n          Bet: data.bet\n        }).then(function (data) {\n          commit('Set_Challenge', data.data);\n        });\n      }, 1500);\n    },\n    AsyncSetUserName: function AsyncSetUserName(_ref6, data) {\n      var commit = _ref6.commit;\n      setTimeout(function () {\n        commit('SetUserName', data);\n      }, 1500);\n    },\n    AsyncResetChallenge: function AsyncResetChallenge(_ref7) {\n      var commit = _ref7.commit;\n      setTimeout(function () {\n        commit('ReSetChallenge');\n      }, 1500);\n    }\n  },\n  getters: {\n    getUserName: function getUserName(state) {\n      return state.username;\n    },\n    getChallengeStatus: function getChallengeStatus(state) {\n      return state.ChallengeStatus;\n    },\n    get_challenge: function get_challenge(state) {\n      console.log(state.challenge);\n      return state.challenge;\n    },\n    get_game: function get_game(state) {\n      console.log(\"askjsljk\");\n      console.log(state.Game);\n      return state.Game;\n    },\n    get_Oponent: function get_Oponent(state) {\n      return state.Challenge.oponent.name;\n    },\n    get_Challenger: function get_Challenger(state) {\n      return state.Challenge.challenger;\n    },\n    Get_game_Challenge: function Get_game_Challenge(state) {\n      return {\n        game_name: state.Game.Name,\n        game_image: state.Game.GameImage,\n        modes: state.Game.Modes\n      };\n    },\n    Get_c_error: function Get_c_error(state) {\n      return state.error;\n    }\n  }\n};\nvar team = {\n  namespaced: true,\n  state: {\n    teams: [],\n    activeTeam: null\n  },\n  mutations: {\n    \"SET_TEAM\": function SET_TEAM(state, data) {\n      Vue.set(state, \"activeTeam\", data);\n    },\n    \"SET_ACTIVE_TEAM\": function SET_ACTIVE_TEAM(state, data) {\n      Vue.set(state, \"activeTeam\", data);\n    }\n  },\n  getters: {\n    teams: function teams(state) {\n      return state.teams;\n    },\n    activeTeam: function activeTeam(state) {\n      return state.activeTeam;\n    }\n  },\n  actions: {\n    getAllTeams: function getAllTeams(_ref8, userId) {\n      var commit = _ref8.commit;\n    },\n    getTeam: function () {\n      var _getTeam = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref9, id) {\n        var commit, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref9.commit;\n                console.log('get team');\n                _context.next = 4;\n                return api.get(\"/api/user/get-team/\" + id);\n\n              case 4:\n                res = _context.sent;\n                commit(\"SET_TEAM\", res.data);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getTeam(_x, _x2) {\n        return _getTeam.apply(this, arguments);\n      };\n    }(),\n    createTeam: function createTeam(_ref10, payload) {\n      var commit = _ref10.commit,\n          state = _ref10.state,\n          rootState = _ref10.rootState;\n      payload.userId = rootState.user._id;\n      return new Promise(function (resolve, reject) {\n        api.post(\"/api/user/add-team\", payload).then(function (res) {\n          commit(\"SET_TEAM\", res.data.response);\n          resolve(res.data);\n        }).catch(function (err) {\n          return reject(err.message);\n        });\n      });\n    },\n    updateTeam: function updateTeam(_ref11, payload) {\n      var commit = _ref11.commit,\n          state = _ref11.state,\n          rootState = _ref11.rootState;\n      payload.userId = rootState.user._id;\n      return new Promise(function (resolve, reject) {\n        api.put(\"/api/user/update-team\", payload).then(function (res) {\n          commit(\"SET_TEAM\", res.data);\n          resolve(res.data);\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }\n};\nexport default new Vuex.Store({\n  state: {\n    token: localStorage.getItem('token') || null,\n    user: null\n  },\n  getters: {\n    loggedIn: function loggedIn(state) {\n      return state.token != null;\n    },\n    getUserId: function getUserId(state) {\n      console.log(state.user);\n      return state.user ? state.user._id : null;\n    },\n    getUserData: function getUserData(state) {\n      return state.user;\n    }\n  },\n  mutations: {\n    retriveToken: function retriveToken(state, token) {\n      state.token = token;\n    },\n    destroyToken: function destroyToken(state) {\n      state.token = null;\n    },\n    'SET_PROFILE': function SET_PROFILE(state, data) {\n      state.user = data;\n    }\n  },\n  actions: {\n    retriveToken: function retriveToken(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        UserService.login(credentials).then(function (response) {\n          var token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          context.dispatch('getProfile');\n          resolve(response); // console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n    retriveTokenSocial: function retriveTokenSocial(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        axios.post(\"/api/users/auth/facebook\", credentials).then(function (response) {\n          var token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response); // console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n    retriveTokenMeta: function retriveTokenMeta(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        axios.post('/users/auth/meta', {\n          address: credentials.address\n        }).then(function (response) {\n          var token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response); // console.log(response);\n        }).catch(function (error) {\n          // console.log(error);\n          reject(error);\n        });\n      });\n    },\n    retriveTokenFB: function retriveTokenFB(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        axios.post('/users/auth/facebook/token', {\n          email: credentials.email,\n          name: credentials.name,\n          id: credentials.id\n        }).then(function (response) {\n          var token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response); // console.log(response);\n        }).catch(function (error) {\n          // console.log(error);\n          reject(error);\n        });\n      });\n    },\n    retriveTokenTwitch: function retriveTokenTwitch(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        axios.post('/api/users/auth/twitch', {\n          name: credentials.name,\n          email: credentials.email,\n          id: credentials.id\n        }).then(function (response) {\n          var token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response); // console.log(response);\n        }).catch(function (error) {\n          // console.log(error);\n          reject(error);\n        });\n      });\n    },\n    destroyToken: function destroyToken(context) {\n      axios.defaults.headers.common['Authorization'] = context.state.token;\n\n      if (context.getters.loggedIn) {\n        return new Promise(function (resove, reject) {\n          axios.post('/api/users/logout').then(function (response) {\n            localStorage.removeItem('token');\n            context.commit('destroyToken');\n            resove(response);\n          }).catch(function (error) {\n            localStorage.removeItem('token');\n            context.commit('destroyToken');\n            reject(error);\n          });\n        });\n      }\n    },\n    register: function register(context, data) {\n      return new Promise(function (resolve, reject) {\n        UserService.register(data).then(function (response) {\n          var token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response); // console.log(response);\n        }).catch(function (error) {\n          console.log(\"error\");\n          reject(error);\n        });\n      });\n    },\n    getProfile: function () {\n      var _getProfile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref12) {\n        var commit, state, dispatch, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref12.commit, state = _ref12.state, dispatch = _ref12.dispatch;\n                console.log(\"getting profile\");\n\n                if (!state.token) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 5;\n                return UserService.getProfile(state.token);\n\n              case 5:\n                res = _context2.sent;\n                dispatch(\"team/getTeam\", res.data._id);\n                commit(\"SET_PROFILE\", res.data);\n                _context2.next = 11;\n                break;\n\n              case 10:\n                // dispatch(\"team/getTeam\", res.data._id);\n                commit(\"SET_PROFILE\", {\n                  _id: null\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getProfile(_x3) {\n        return _getProfile.apply(this, arguments);\n      };\n    }()\n  },\n  modules: {\n    team: team,\n    game: game\n  }\n});",{"version":3,"sources":["/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/store.js"],"names":["Vue","Vuex","axios","UserService","api","vm","use","BASE_URL","game","state","Game","Challenge","oponent","challenger","error","challenge","ChallengeStatus","username","mutations","Set_Game","data","console","log","Name","Data","room","token","localStorage","getItem","Set_Challenge","SetChallengeStatus","Set_Challenger","c_error","SetUserName","ReSetChallenge","actions","AsyncSubmitDispute","commit","setTimeout","fd","FormData","append","DisputeImage","challenge_id","Contact_Source","Contact_Details","add_comments","post","AsyncChallengeStatus","AsyncSetGame","name","then","AsyncSetChallenger","AsyncStartChallenge","GameName","Oponent","Challenger","Bet","bet","AsyncSetUserName","AsyncResetChallenge","getters","getUserName","getChallengeStatus","get_challenge","get_game","get_Oponent","get_Challenger","Get_game_Challenge","game_name","game_image","GameImage","modes","Modes","Get_c_error","team","namespaced","teams","activeTeam","set","getAllTeams","userId","getTeam","id","get","res","createTeam","payload","rootState","user","_id","Promise","resolve","reject","response","catch","err","message","updateTeam","put","Store","loggedIn","getUserId","getUserData","retriveToken","destroyToken","context","credentials","login","setItem","dispatch","retriveTokenSocial","retriveTokenMeta","address","retriveTokenFB","email","retriveTokenTwitch","defaults","headers","common","resove","removeItem","register","getProfile","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport UserService from '@/services/UserService';\nimport api from '@/services/RestService';\nimport vm from './main.js';\nVue.use(Vuex)\nconst BASE_URL = \"http://localhost:3000/api/\";\nconst game = {\n  state:{\n    Game:{},\n    Challenge:{\n      oponent:'',\n      challenger:'',\n      error:'',\n      \n    },\n    challenge:{},  \n    ChallengeStatus:'',\n    username:'',\n  },\n  mutations:{\n    Set_Game:(state,data)=>{\n      state.Game=data;  \n      console.log(\"game name fuckers:\"+data.Name)\n      let Data={     \n        room:data.Name,    \n        token:localStorage.getItem('token')     \n    };   \n    \n    \n    },\n    Set_Challenge:(state,data)=>{\n      console.log(data)\n      state.challenge=data;\n    },\n    SetChallengeStatus:(state,data)=>{\n      state.ChallengeStatus=data; \n    },\n    Set_Challenger:(state,data)=>{\n      state.Challenge.oponent=data.oponent;\n      state.Challenge.challenger=data.challenger;\n\n    },\n    c_error:(state,data)=>{\n            state.error=data;\n    },\n    SetUserName:(state,data)=>{\n      state.username=data;\n    },\n    ReSetChallenge:(state,data)=>{\n      state.Challenge='';\n      state.challenge='';\n      state.ChallengeStatus='';\n    }\n  }, \n\n    actions:{\n      AsyncSubmitDispute({commit},data){\n\n        console.log(data)\n          setTimeout(()=>{\n            const fd=new FormData();\n            fd.append('DisputeImage',data.DisputeImage)\n            fd.append('challenge_id',data.challenge_id)\n            fd.append('Contact_Source',data.Contact_Source)\n            fd.append('Contact_Details',data.Contact_Details)\n            fd.append('add_comments',data.add_comments)\n            \n           axios.post(BASE_URL+'registerDispute',fd)\n          },1500);          \n      },\n      AsyncChallengeStatus({commit},data){\n        setTimeout(()=>{\n          console.log(data)\n            commit('SetChallengeStatus',data)\n        },1500)\n      },\n      AsyncSetGame:({commit},data)=>{\n        console.log(\"set name action\")\n        setTimeout(()=>{\n          axios.post(BASE_URL+'getGame',{  \n            name:'Mobile Legends'\n        }).then((data)=>{\n          console.log(\"hello 66 dkasjdklas\")\n            console.log(data)  \n            commit('Set_Game',data.data);\n        });\n           \n        },1500)\n     },\n     AsyncSetChallenger:({commit},data)=>{\n           setTimeout(()=>{\n            console.log(\"asjaksjkajsk akjskajs\") \n            console.log(data)\n\n            commit('Set_Challenger',data);\n           },1500)\n     },\n     AsyncStartChallenge:({commit},data)=>{\n         setTimeout(()=>{\n           console.log(data);\n           axios.post(BASE_URL+'registerChallenge',{\n            GameName:data.game,\n            Oponent:data.oponent,  \n            Challenger:data.challenger,    \n            Bet:data.bet\n           }).then((data)=>{   \n             commit('Set_Challenge',data.data)\n           }); \n         },1500)\n     },\n     AsyncSetUserName:({commit},data)=>{\n       setTimeout(()=>{\n         commit('SetUserName',data);\n       },1500)\n     },\n     AsyncResetChallenge:({commit})=>{\n       setTimeout(()=>{\n         commit('ReSetChallenge')\n       },1500)\n     }   \n      \n    },\n    getters:{\n      getUserName:(state)=>{\n          return state.username;\n      },\n      getChallengeStatus:(state)=>{\n         return state.ChallengeStatus;\n      },\n      get_challenge:(state)=>{\n        console.log(state.challenge)\n        return state.challenge;\n      },\n      get_game:(state)=>{\n        console.log(\"askjsljk\")\n        console.log(state.Game)\n        return state.Game;\n\n      } ,\n      get_Oponent:(state)=>{\n        return state.Challenge.oponent.name;\n      },\n    \n      get_Challenger:(state)=>{\n        return state.Challenge.challenger;\n      },\n      Get_game_Challenge:(state)=>{\n        return {\n          game_name:state.Game.Name,\n          game_image:state.Game.GameImage,\n          modes:state.Game.Modes  \n        }\n      },\n      Get_c_error:(state)=>{\n        return state.error;\n      },\n\n  }\n}\n\n\n\nconst team = {\n  namespaced: true,\n  state: {\n    teams: [],\n    activeTeam: null,\n    \n  },\n  mutations: {\n    \"SET_TEAM\": (state, data) => {\n      Vue.set(state, \"activeTeam\", data);\n    },\n    \"SET_ACTIVE_TEAM\": (state, data) => {\n      Vue.set(state, \"activeTeam\", data);\n    },\n      },\n  getters: {\n    teams: (state) => {\n      return state.teams;\n    },\n    activeTeam: (state) => {\n      return state.activeTeam;\n    }\n  },\n  actions: {\n    getAllTeams: ({commit}, userId) => {\n\n    },\n    getTeam: async ({commit}, id) => {\n      console.log('get team');\n      const res = await api.get(\"/api/user/get-team/\" + id)\n      commit(\"SET_TEAM\", res.data);\n    },\n    createTeam: ({commit, state, rootState}, payload) => {\n        payload.userId = rootState.user._id;\n        return new Promise ((resolve, reject) => {\n          api.post(\"/api/user/add-team\", payload)\n            .then(res => {\n              commit(\"SET_TEAM\", res.data.response);\n              resolve(res.data)\n            })\n            .catch(err => reject(err.message))\n        })\n    },\n    updateTeam: ({commit, state, rootState}, payload) => {\n      payload.userId = rootState.user._id;\n      return new Promise ((resolve, reject) => {\n        api.put(\"/api/user/update-team\", payload)\n          .then(res => {\n            commit(\"SET_TEAM\", res.data);\n            resolve(res.data)\n          })\n          .catch(err => reject(err))\n      })\n    },\n  },\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: localStorage.getItem('token') || null,\n    user: null\n  },\n  getters: {\n    loggedIn(state) {\n      return (state.token != null);\n    },\n    getUserId(state) {\n      console.log(state.user);\n      return state.user ? state.user._id : null\n    },\n    getUserData(state) {\n      return state.user;\n    },\n    // getUserAdditionalData(state) {\n    //   return UserService.getAdditionalData(state.user.id);\n    // }\n  },\n  mutations: {\n    retriveToken(state, token) {\n      state.token = token;\n    },\n    destroyToken(state) {\n      state.token = null;\n    },\n    'SET_PROFILE'(state, data) {\n      state.user = data;\n    }\n  },\n  actions: {\n    retriveToken(context, credentials) {\n      return new Promise((resolve, reject) => {\n        UserService.login(credentials)\n        .then(response => {\n          const token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          context.dispatch('getProfile');\n          resolve(response);\n          // console.log(response);\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        })\n     })\n    },\n    retriveTokenSocial(context, credentials) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/users/auth/facebook\", credentials)\n        .then(response => {\n          const token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response);\n          // console.log(response);\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        })\n     })\n    },    \n    retriveTokenMeta(context, credentials) {\n      return new Promise((resolve, reject) => {\n        axios.post('/users/auth/meta', {\n          address: credentials.address\n        })\n        .then(response => {\n          const token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response);\n          // console.log(response);\n        })\n        .catch(error => {\n          // console.log(error);\n          reject(error);\n        })\n     })\n    },    \n    retriveTokenFB(context, credentials) {\n      return new Promise((resolve, reject) => {\n\n        axios.post('/users/auth/facebook/token', {\n          email: credentials.email,\n          name: credentials.name,\n          id: credentials.id,\n        })\n        .then(response => {\n          const token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response);\n          // console.log(response);\n        })\n        .catch(error => {\n          // console.log(error);\n          reject(error);\n        })\n     })\n    },    \n    retriveTokenTwitch(context, credentials) {\n      return new Promise((resolve, reject) => {\n\n        axios.post('/api/users/auth/twitch', {\n          name: credentials.name,\n          email: credentials.email,\n          id: credentials.id\n        })\n        .then(response => {\n          const token = response.data.token;\n          localStorage.setItem('token', token);\n          context.commit('retriveToken', token);\n          resolve(response);\n          // console.log(response);\n        })\n        .catch(error => {\n          // console.log(error);\n          reject(error);\n        })\n     })\n    },\n    destroyToken(context) {\n      axios.defaults.headers.common['Authorization'] = context.state.token;\n      if (context.getters.loggedIn) {\n        return new Promise((resove, reject) => {\n          axios.post('/api/users/logout')\n          .then(response => {\n            localStorage.removeItem('token')\n            context.commit('destroyToken')\n            resove(response)\n          })\n          .catch( error => {\n            localStorage.removeItem('token')\n            context.commit('destroyToken')\n            reject(error);\n          })\n        })\n      }\n    },\n    register(context, data) {\n      return new Promise((resolve, reject) => {\n        UserService.register(data)\n          .then(response => {\n            const token = response.data.token;\n\n            localStorage.setItem('token', token);\n            context.commit('retriveToken', token);\n            resolve(response);\n            // console.log(response);\n          })\n          .catch(error => {\n            console.log(\"error\");\n            reject(error);\n          })\n     })\n    },\n    async getProfile({commit, state, dispatch}) {\n      console.log(\"getting profile\");\n      if(state.token){\n      let res = await UserService.getProfile(state.token)\n      dispatch(\"team/getTeam\", res.data._id);\n      commit(\"SET_PROFILE\", res.data);\n      } else{\n        // dispatch(\"team/getTeam\", res.data._id);\n        commit(\"SET_PROFILE\", {_id:null});\n      }\n      // dispatch(\"team/getTeam\", res.data._id);\n      // commit(\"SET_PROFILE\", res.data);\n    }\n  },\n  modules: {\n    team: team,\n    game: game\n  }\n})\n"]}]}