{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Media/MainContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Media/MainContent.vue","mtime":1560173403547},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js","mtime":1560173721326},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      posts: [],\n      errors: []\n    };\n  },\n  // Fetches posts when the component is created.\n  created: function created() {\n    var _this = this;\n\n    axios.get(\"https://api.opendota.com/api/publicMatches\").then(function (response) {\n      // JSON responses are automatically parsed.\n      _this.posts = response.data;\n    }).catch(function (e) {\n      _this.errors.push(e);\n    }); // async / await version (created() becomes async created())\n    //\n    // try {\n    //   const response = await axios.get(`http://jsonplaceholder.typicode.com/posts`)\n    //   this.posts = response.data\n    // } catch (e) {\n    //   this.errors.push(e)\n    // }\n  }\n};",{"version":3,"sources":["MainContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AAEA,cAAA;AAFA,KAAA;AAIA,GANA;AAQA;AACA,SATA,qBASA;AAAA;;AACA,UAAA,GAAA,+CACA,IADA,CACA,oBAAA;AACA;AACA,YAAA,KAAA,GAAA,SAAA,IAAA;AACA,KAJA,EAKA,KALA,CAKA,aAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,KAPA,EADA,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,CAAA","sourcesContent":["<template>\n    <div class=\"col-md-8 main-content\">\n  <ul v-if=\"posts && posts.length\">\n    <li v-for=\"post of posts\">\n      <p><strong>{{post.match_id}}</strong></p>\n      <p>{{post.radiant_win}}</p>\n    </li>\n  </ul>\n\n  <ul v-if=\"errors && errors.length\">\n    <li v-for=\"error of errors\">\n      {{error.message}}\n    </li>\n  </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      errors: []\n    }\n  },\n\n  // Fetches posts when the component is created.\n  created() {\n    axios.get(`https://api.opendota.com/api/publicMatches`)\n    .then(response => {\n      // JSON responses are automatically parsed.\n      this.posts = response.data\n    })\n    .catch(e => {\n      this.errors.push(e)\n    })\n\n    // async / await version (created() becomes async created())\n    //\n    // try {\n    //   const response = await axios.get(`http://jsonplaceholder.typicode.com/posts`)\n    //   this.posts = response.data\n    // } catch (e) {\n    //   this.errors.push(e)\n    // }\n  }\n}\n</script>"],"sourceRoot":"src/components/Media"}]}