{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamUpcomingEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamUpcomingEvents.vue","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js","mtime":1560173721326},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport _objectSpread from \"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"@/services/RestService\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as moment from 'moment';\nexport default {\n  name: \"edit-team-detail\",\n  props: ['data', 'modalProps'],\n  data: function data() {\n    return {\n      load: false,\n      file: null,\n      form: {\n        eventName: '',\n        eventImage: '',\n        eventDate: '',\n        eventLink: ''\n      },\n      moment: moment\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    team: 'team/activeTeam'\n  })),\n  methods: _objectSpread({}, mapActions({\n    updateTeam: 'team/updateTeam'\n  }), {\n    submit: function () {\n      var _submit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var that, upload, formData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"submitting\");\n                that = this;\n                that.load = true;\n                upload = '';\n\n                if (!this.file) {\n                  _context.next = 11;\n                  break;\n                }\n\n                formData = new FormData();\n                formData.append(\"file\", this.file);\n                _context.next = 9;\n                return api.postMultipart(\"/api/file/upload\", formData);\n\n              case 9:\n                upload = _context.sent;\n                this.form.eventImage = upload.data.url;\n\n              case 11:\n                if (this.modalProps && !isNaN(this.modalProps.model)) this.team.upcomingEvents.splice(this.modalProps.model, 1, _objectSpread({}, this.form));else this.team.upcomingEvents.push(this.form);\n                this.updateTeam({\n                  upcomingEvents: this.team.upcomingEvents\n                }).then(function (res) {\n                  return _this.$emit('finish');\n                }).catch(function (err) {\n                  return _this.$emit('finish');\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function submit() {\n        return _submit.apply(this, arguments);\n      };\n    }()\n  }),\n  mounted: function mounted() {\n    if (this.modalProps && !isNaN(this.modalProps.model)) {\n      this.form = _objectSpread({}, this.team.upcomingEvents[this.modalProps.model]);\n      this.form.eventDate = moment(this.form.eventDate).format('DD-MM-YYYY');\n    } else this.form = {\n      eventName: '',\n      eventImage: '',\n      eventDate: '',\n      eventLink: ''\n    };\n  },\n  watch: {\n    \"modalProps\": function modalProps() {\n      if (this.modalProps && !isNaN(this.modalProps.model)) {\n        this.form = _objectSpread({}, this.team.upcomingEvents[this.modalProps.model]);\n      }\n    }\n  }\n};",{"version":3,"sources":["TeamUpcomingEvents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,GAAA,MAAA,wBAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,KAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,QAAA,kBADA;AAEA,SAAA,CAAA,MAAA,EAAA,YAAA,CAFA;AAGA,MAHA,kBAGA;AACA,WAAA;AACA,YAAA,KADA;AAEA,YAAA,IAFA;AAGA,YAAA;AACA,mBAAA,EADA;AAEA,oBAAA,EAFA;AAGA,mBAAA,EAHA;AAIA,mBAAA;AAJA,OAHA;AASA;AATA,KAAA;AAWA,GAfA;AAgBA,8BACA,WAAA;AACA,UAAA;AADA,GAAA,CADA,CAhBA;AAqBA,6BACA,WAAA;AACA,gBAAA;AADA,GAAA,CADA;AAIA,UAJA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,wBAAA,GAAA,CAAA,YAAA;AAEA,oBAPA,GAOA,IAPA;AAQA,qBAAA,IAAA,GAAA,IAAA;AAEA,sBAVA,GAUA,EAVA;;AAAA,qBAYA,KAAA,IAZA;AAAA;AAAA;AAAA;;AAcA,wBAdA,GAcA,IAAA,QAAA,EAdA;AAeA,yBAAA,MAAA,CAAA,MAAA,EAAA,KAAA,IAAA;AAfA;AAAA,uBAgBA,IAAA,aAAA,CAAA,kBAAA,EAAA,QAAA,CAhBA;;AAAA;AAgBA,sBAhBA;AAiBA,qBAAA,IAAA,CAAA,UAAA,GAAA,OAAA,IAAA,CAAA,GAAA;;AAjBA;AAqBA,oBAAA,KAAA,UAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,KAAA,CAAA,EACA,KAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,CAAA,oBAAA,KAAA,IAAA,GADA,KAGA,KAAA,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,KAAA,IAAA;AAEA,qBAAA,UAAA,CAAA;AAAA,kCAAA,KAAA,IAAA,CAAA;AAAA,iBAAA,EACA,IADA,CACA;AAAA,yBAAA,MAAA,KAAA,CAAA,QAAA,CAAA;AAAA,iBADA,EAEA,KAFA,CAEA;AAAA,yBAAA,MAAA,KAAA,CAAA,QAAA,CAAA;AAAA,iBAFA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,IArBA;AAoDA,SApDA,qBAoDA;AACA,QAAA,KAAA,UAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,KAAA,CAAA,EACA;AACA,WAAA,IAAA,qBAAA,KAAA,IAAA,CAAA,cAAA,CAAA,KAAA,UAAA,CAAA,KAAA,CAAA;AACA,WAAA,IAAA,CAAA,SAAA,GAAA,OAAA,KAAA,IAAA,CAAA,SAAA,EAAA,MAAA,CAAA,YAAA,CAAA;AACA,KAJA,MAMA,KAAA,IAAA,GAAA;AACA,iBAAA,EADA;AAEA,kBAAA,EAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA;AAJA,KAAA;AAMA,GAjEA;AAkEA,SAAA;AACA,kBAAA,sBAAA;AACA,UAAA,KAAA,UAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,KAAA,CAAA,EACA;AACA,aAAA,IAAA,qBAAA,KAAA,IAAA,CAAA,cAAA,CAAA,KAAA,UAAA,CAAA,KAAA,CAAA;AACA;AACA;AANA;AAlEA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-form @submit.prevent=\"submit\">\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Event Name:\"\n                    label-for=\"name\">\n        <b-form-input id=\"name\"\n                      type=\"text\"\n                      v-model=\"form.eventName\"\n                      required\n                      placeholder=\"Enter name\">\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"date\"\n                    label=\"Date of Event\"\n                    label-for=\"date\">\n        <b-form-input id=\"date\"\n                      type=\"date\"\n                      v-model=\"form.eventDate\"\n                      value=\"01/01/2019\"\n                      required\n                      placeholder=\"dd/mm/yyyy\">\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"link\"\n                    label=\"Event Website\"\n                    label-for=\"link\">\n        <b-form-input id=\"link\"\n                      type=\"url\"\n                      v-model=\"form.eventLink\"\n                      required\n                      placeholder=\"url of event\">\n        </b-form-input>\n      </b-form-group>\n      <!-- Styled -->\n      <b-form-file required v-model=\"file\" :state=\"Boolean(file)\" placeholder=\"Choose event photo\"></b-form-file>\n      <div v-if=\"file\" class=\"mt-3\">Selected file: {{file && file.name}} <i @click=\"file = null\" class=\"fa fa-close pointer\"></i></div>\n\n      <div style=\"margin-top: 20px; text-align: right\">\n        <div v-if=\"load\" class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        <b-button type=\"submit\" variant=\"primary\">Update</b-button>\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport api from \"@/services/RestService\"\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as moment from 'moment'\n\nexport default {\n  name: \"edit-team-detail\",\n  props: ['data', 'modalProps'],\n  data() {\n    return {\n      load: false,\n      file: null,\n      form: {\n        eventName: '',\n        eventImage: '',\n        eventDate: '',\n        eventLink: ''\n      },\n      moment\n    }\n  },\n  computed: {\n    ...mapGetters({\n      team: 'team/activeTeam'\n    })\n  },\n  methods: {\n    ...mapActions({\n      updateTeam : 'team/updateTeam'\n    }),\n    async submit() {\n      console.log(\"submitting\");\n\n      let that = this;\n      that.load = true;\n\n      var upload = '';\n\n      if(this.file)\n      {\n        let formData = new FormData();\n        formData.append(\"file\", this.file);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        this.form.eventImage = upload.data.url;\n      }\n\n\n      if(this.modalProps && !isNaN(this.modalProps.model)) \n        this.team.upcomingEvents.splice(this.modalProps.model, 1,{...this.form});\n      else\n        this.team.upcomingEvents.push(this.form);\n\n      this.updateTeam({upcomingEvents: this.team.upcomingEvents})\n        .then(res => this.$emit('finish'))\n        .catch(err => this.$emit('finish'));\n    }\n  },\n  mounted() {\n    if(this.modalProps && !isNaN(this.modalProps.model))\n    {\n      this.form = {...this.team.upcomingEvents[this.modalProps.model]};\n      this.form.eventDate = moment(this.form.eventDate).format('DD-MM-YYYY');\n    }\n    else\n      this.form = {\n        eventName: '',\n        eventImage: '',\n        eventDate: '',\n        eventLink: ''\n      }\n  },\n  watch: {\n    \"modalProps\": function(){\n      if(this.modalProps && !isNaN(this.modalProps.model))\n      {\n        this.form = {...this.team.upcomingEvents[this.modalProps.model]};\n      }\n    }\n  }\n}\n</script>\n\n"],"sourceRoot":"src/components/forms"}]}