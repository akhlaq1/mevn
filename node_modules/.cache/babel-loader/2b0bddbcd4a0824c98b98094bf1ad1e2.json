{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Schedule/EventForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Schedule/EventForm.vue","mtime":1560173403551},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js","mtime":1560173721326},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["import _objectSpread from \"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DatePicker from \"vuejs-datepicker\";\nimport format from \"date-fns/format\";\nimport ColorPicker from \"./ColorPicker\";\nexport default {\n  name: \"EventForm\",\n  model: {\n    prop: \"eventData\",\n    event: \"updateEvent\"\n  },\n  props: {\n    eventData: {\n      type: Object,\n      default: function _default() {\n        return {\n          eventId: \"\",\n          title: \"\",\n          start: \"\",\n          end: \"\",\n          cssClass: \"\",\n          data: {\n            description: \"\"\n          }\n        };\n      }\n    },\n    showButtons: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      event: JSON.parse(JSON.stringify(this.eventData))\n    };\n  },\n  watch: {\n    eventData: {\n      immediate: true,\n      handler: function handler(newValue) {\n        this.event = JSON.parse(JSON.stringify(newValue));\n      }\n    }\n  },\n  methods: {\n    handleSubmit: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var start, end, event, req, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                start = format(this.event.start, \"YYYY-MM-DD\");\n                end = format(this.event.end, \"YYYY-MM-DD\");\n                event = _objectSpread({}, this.event, {\n                  start: start,\n                  end: end\n                });\n                _context.next = 5;\n                return fetch(\"http://localhost:4000/schedule\", {\n                  method: \"POST\",\n                  body: JSON.stringify(event),\n                  headers: {\n                    \"content-type\": \"application/json\"\n                  }\n                });\n\n              case 5:\n                req = _context.sent;\n                _context.next = 8;\n                return req.json();\n\n              case 8:\n                res = _context.sent;\n                this.resetValues();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function handleSubmit() {\n        return _handleSubmit.apply(this, arguments);\n      };\n    }(),\n    selectColor: function selectColor(color) {\n      this.event = _objectSpread({}, this.event, {\n        cssClass: color\n      });\n      this.$emit(\"updateEvent\", this.event);\n    },\n    resetValues: function resetValues() {\n      this.event = {\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        cssClass: \"\",\n        data: {\n          description: \"\"\n        }\n      };\n    },\n    goBack: function goBack() {\n      this.$router.go(-1);\n    }\n  },\n  components: {\n    DatePicker: DatePicker,\n    ColorPicker: ColorPicker\n  }\n};",{"version":3,"sources":["EventForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAA,UAAA,MAAA,kBAAA;AACA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,WAAA,MAAA,eAAA;AAEA,eAAA;AACA,QAAA,WADA;AAEA,SAAA;AACA,UAAA,WADA;AAEA,WAAA;AAFA,GAFA;AAMA,SAAA;AACA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAAA,eAAA;AACA,mBAAA,EADA;AAEA,iBAAA,EAFA;AAGA,iBAAA,EAHA;AAIA,eAAA,EAJA;AAKA,oBAAA,EALA;AAMA,gBAAA;AACA,yBAAA;AADA;AANA,SAAA;AAAA;AAFA,KADA;AAcA,iBAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA;AAdA,GANA;AAyBA,MAzBA,kBAyBA;AACA,WAAA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AADA,KAAA;AAGA,GA7BA;AA8BA,SAAA;AACA,eAAA;AACA,iBAAA,IADA;AAEA,aAFA,mBAEA,QAFA,EAEA;AACA,aAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA,SAAA,CAAA,QAAA,CAAA,CAAA;AACA;AAJA;AADA,GA9BA;AAsCA,WAAA;AACA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAFA,GAEA,OAAA,KAAA,KAAA,CAAA,KAAA,EAAA,YAAA,CAFA;AAGA,mBAHA,GAGA,OAAA,KAAA,KAAA,CAAA,GAAA,EAAA,YAAA,CAHA;AAIA,qBAJA,qBAKA,KAAA,KALA;AAMA,8BANA;AAOA;AAPA;AAAA;AAAA,uBASA,MAAA,gCAAA,EAAA;AACA,0BAAA,MADA;AAEA,wBAAA,KAAA,SAAA,CAAA,KAAA,CAFA;AAGA,2BAAA;AACA,oCAAA;AADA;AAHA,iBAAA,CATA;;AAAA;AASA,mBATA;AAAA;AAAA,uBAgBA,IAAA,IAAA,EAhBA;;AAAA;AAgBA,mBAhBA;AAiBA,qBAAA,WAAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmBA,eAnBA,uBAmBA,KAnBA,EAmBA;AACA,WAAA,KAAA,qBACA,KAAA,KADA;AAEA,kBAAA;AAFA;AAIA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,KAAA;AACA,KAzBA;AA0BA,eA1BA,yBA0BA;AACA,WAAA,KAAA,GAAA;AACA,eAAA,EADA;AAEA,eAAA,EAFA;AAGA,aAAA,EAHA;AAIA,kBAAA,EAJA;AAKA,cAAA;AACA,uBAAA;AADA;AALA,OAAA;AASA,KApCA;AAqCA,UArCA,oBAqCA;AACA,WAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA;AAvCA,GAtCA;AA+EA,cAAA;AACA,0BADA;AAEA;AAFA;AA/EA,CAAA","sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <div class=\"input-holder\">\n      <input\n        type=\"text\"\n        placeholder=\"Event title\"\n        v-model=\"event.title\"\n        @change=\"$emit('updateEvent', event)\"\n      >\n    </div>\n    <div class=\"input-holder\">\n      <date-picker\n        :placeholder=\"'Start date'\"\n        v-model=\"event.start\"\n        @change=\"$emit('updateEvent', event)\"\n      />\n    </div>\n    <div class=\"input-holder\">\n      <date-picker\n        :placeholder=\"'End date'\"\n        v-model=\"event.end\"\n        @change=\"$emit('updateEvent', event)\"\n      />\n    </div>\n    <div class=\"input-holder\">\n      <textarea\n        placeholder=\"Event description\"\n        rows=\"4\"\n        v-model=\"event.data.description\"\n        @change=\"$emit('updateEvent', event)\"\n      ></textarea>\n    </div>\n    <div class=\"input-holder\">\n      <color-picker @colorPicked=\"selectColor\" :color=\"event.cssClass\"/>\n    </div>\n    <div class=\"input-holder\" v-if=\"showButtons\">\n      <b-button type=\"submit\">Schedule</b-button>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n      <b-button type=\"back\" @click.prevent=\"goBack()\">Go back</b-button>\n    </div>\n  </form>\n</template>\n\n\n<script>\nimport DatePicker from \"vuejs-datepicker\";\nimport format from \"date-fns/format\";\nimport ColorPicker from \"./ColorPicker\";\n\nexport default {\n  name: \"EventForm\",\n  model: {\n    prop: \"eventData\",\n    event: \"updateEvent\"\n  },\n  props: {\n    eventData: {\n      type: Object,\n      default: () => ({\n        eventId: \"\",\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        cssClass: \"\",\n        data: {\n          description: \"\"\n        }\n      })\n    },\n    showButtons: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      event: JSON.parse(JSON.stringify(this.eventData))\n    };\n  },\n  watch: {\n    eventData: {\n      immediate: true,\n      handler(newValue) {\n        this.event = JSON.parse(JSON.stringify(newValue));\n      }\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      const start = format(this.event.start, \"YYYY-MM-DD\");\n      const end = format(this.event.end, \"YYYY-MM-DD\");\n      const event = {\n        ...this.event,\n        start,\n        end\n      };\n      const req = await fetch(\"http://localhost:4000/schedule\", {\n        method: \"POST\",\n        body: JSON.stringify(event),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      });\n      const res = await req.json();\n      this.resetValues();\n    },\n    selectColor(color) {\n      this.event = {\n        ...this.event,\n        cssClass: color\n      };\n      this.$emit(\"updateEvent\", this.event);\n    },\n    resetValues() {\n      this.event = {\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        cssClass: \"\",\n        data: {\n          description: \"\"\n        }\n      };\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  },\n  components: {\n    DatePicker,\n    ColorPicker\n  }\n};\n</script>\n\n\n<style>\nform {\n  display: flex;\n  flex-direction: column;\n  margin-left: 30px;\n}\n.input-holder {\n  margin: 10px 0;\n  display: flex;\n  justify-content: flex-start;\n}\n.vdp-datepicker {\n  width: 100%;\n}\n.vdp-datepicker > div > input {\n  width: 77%;\n}\n.input-holder > button {\n  justify-self: center;\n  padding: 12px 25px;\n  border-radius: 0;\n  text-transform: uppercase;\n  font-weight: 600;\n  background: orangered;\n  color: white;\n  border: none;\n  font-size: 14px;\n  letter-spacing: -0.1px;\n  cursor: pointer;\n}\ninput,\ntextarea {\n  padding: 12px 15px;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0;\n  width: 70%;\n  opacity: 0.8;\n  font-size: 15px;\n  font-weight: normal;\n}\ninput:focus,\ntextarea:focus,\nbutton:focus {\n  border: 2px solid orangered;\n  outline: none;\n  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.2);\n}\n</style>\n"],"sourceRoot":"src/components/Schedule"}]}