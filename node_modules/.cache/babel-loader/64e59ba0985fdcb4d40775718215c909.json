{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/eslint-loader/index.js??ref--13-0!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/services/RestService.js","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/services/RestService.js","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/thread-loader/dist/cjs.js","mtime":1560173721326},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/eslint-loader/index.js","mtime":1560173713724}],"contextDependencies":[],"result":["import _objectSpread from \"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nvar BASE_URL = \"http://localhost:3000\";\nexport function get(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.get(BASE_URL + url, {\n      params: params\n    }).then(function (response) {\n      if (response) {\n        resolve(response);\n      } else {\n        reject();\n      }\n    }).catch(function (error) {\n      if (error && error.response && error.response.data) {\n        reject(error.response.data);\n      }\n    });\n  });\n}\nexport function getPublicUser(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios({\n      method: 'post',\n      url: BASE_URL + url,\n      data: _objectSpread({}, params)\n    }).then(function (response) {\n      if (response) {\n        resolve(response);\n      } else {\n        reject();\n      }\n    }).catch(function (error) {\n      if (error && error.response && error.response.data) {\n        reject(error.response.data);\n      }\n    });\n  });\n}\nexport function post(url, payload) {\n  return new Promise(function (resolve, reject) {\n    axios.post(BASE_URL + url, payload).then(function (response) {\n      resolve(response);\n    }).catch(function (error) {\n      reject(error.response);\n    });\n  });\n}\nexport function put(url, payload) {\n  return new Promise(function (resolve, reject) {\n    axios.put(BASE_URL + url, payload).then(function (response) {\n      if (response.data) {\n        resolve(response);\n      } else {\n        reject();\n      }\n    }).catch(function (error) {\n      console.log(error);\n      reject(error.response.data);\n    });\n  });\n}\nexport function del(url, payload) {\n  return new Promise(function (resolve, reject) {\n    axios.delete(BASE_URL + url, {\n      data: payload\n    }).then(function (response) {\n      if (response.data.success) {\n        resolve(response.data.data);\n      } else {\n        reject();\n      }\n    }).catch(function (error) {\n      reject(error.response.data);\n    });\n  });\n}\nexport function postMultipart(url, formData) {\n  var config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  return new Promise(function (resolve, reject) {\n    axios.post(BASE_URL + url, formData, config).then(function (response) {\n      if (response) resolve(response);else {\n        reject();\n      }\n    }).catch(function (error) {\n      reject(error.response.data);\n    });\n  });\n}\nexport default {\n  get: get,\n  put: put,\n  post: post,\n  del: del,\n  getPublicUser: getPublicUser,\n  postMultipart: postMultipart\n};",{"version":3,"sources":["/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/services/RestService.js"],"names":["axios","BASE_URL","get","url","params","Promise","resolve","reject","then","response","catch","error","data","getPublicUser","method","post","payload","put","console","log","del","delete","success","postMultipart","formData","config","headers"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst BASE_URL = \"http://localhost:3000\";\n\nexport function get(url, params) {\n    return new Promise(function (resolve, reject) {\n        axios.get(BASE_URL + url, { params: params })\n            .then(response => {\n                if (response) {\n                    resolve(response);\n                }\n                else {\n                    reject();\n                }\n            })\n            .catch(error => {\n\n                if (error && error.response && error.response.data) {\n                    reject(error.response.data);\n                }\n\n            });\n    })\n}\n\nexport function getPublicUser(url, params) {\n    return new Promise(function (resolve, reject) {\n        axios({\n            method:'post',\n            url:BASE_URL + url,\n            data:{\n                ...params\n            }\n            })\n            .then(response => {\n                if (response) {\n                    resolve(response);\n                }\n                else {\n                    reject();\n                }\n            })\n            .catch(error => {\n\n                if (error && error.response && error.response.data) {\n                    reject(error.response.data);\n                }\n\n            });\n    })\n}\n\nexport function post(url, payload) {\n    return new Promise(function (resolve, reject) {\n        axios.post(BASE_URL + url, payload)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(error => {\n                reject(error.response);\n            });\n    })\n}\n\nexport function put(url, payload) {\n    return new Promise(function (resolve, reject) {\n        axios.put(BASE_URL + url, payload)\n            .then(response => {\n                if (response.data) {\n                    resolve(response);\n                }\n                else {\n                    reject();\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                reject(error.response.data);\n            });\n    })\n}\n\nexport function del(url, payload) {\n    return new Promise(function (resolve, reject) {\n        axios.delete(BASE_URL + url, { data: payload })\n            .then(response => {\n                if (response.data.success) {\n                    resolve(response.data.data);\n                }\n                else {\n                    reject();\n                }\n            })\n            .catch(error => {\n                reject(error.response.data);\n            });\n    })\n}\n\nexport function postMultipart(url, formData) {\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        axios.post(BASE_URL + url, formData, config)\n            .then(response => {\n                if (response)\n                    resolve(response);\n                else {\n                    reject();\n                }\n            })\n            .catch(error => {\n                reject(error.response.data);\n            });\n    })\n}\n\nexport default {\n    get,\n    put,\n    post,\n    del,\n    getPublicUser,\n    postMultipart\n}"]}]}