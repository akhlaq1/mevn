{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamMatch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamMatch.vue","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from \"@/services/RestService\"\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as moment from \"moment\";\n\nexport default {\n  name: \"edit-team-detail\",\n  props: ['data', 'modalProps'],\n  computed: {\n    ...mapGetters({\n      team: 'team/activeTeam'\n    }),\n  },\n  data() {\n    return {\n      load: false,\n      main: null,\n      team1: null,\n      team2: null,\n      form: {}\n    }\n  },\n  methods: {  \n    ...mapActions({\n      updateTeam: 'team/updateTeam'\n    }),\n    async submit() {\n      console.log(\"submitting\");\n      let that = this;\n      that.load = true;\n      var upload = null;\n\n      if(this.main) {\n        let formData = new FormData();\n        formData.append(\"file\", this.main);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.gamePic = upload.data.url;\n      }\n      if(this.team1) {\n        let formData = new FormData();\n        formData.append(\"file\", this.team1);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.team1Logo = upload.data.url;\n      }\n      if(this.team2) {\n        let formData = new FormData();\n        formData.append(\"file\", this.team2);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.team2Logo = upload.data.url;\n      }\n\n      if(this.modalProps && !isNaN(this.modalProps.model)) \n        this.team.matches.splice(this.modalProps.model, 1,{...this.form});\n      else\n        this.team.matches.push(this.form);\n\n      this.updateTeam({matches: this.team.matches})\n        .then(res => this.$emit('finish'))\n        .catch(err => this.$emit('finish'));\n    }\n  },\n  mounted() {\n    if(this.modalProps && !isNaN(this.modalProps.model))\n    {\n      this.form = {...this.team.matches[this.modalProps.model]};\n      this.form.date = moment(this.form.date).format('DD-MM-YYYY');\n    }\n    else\n      this.form = {}\n  }\n}\n",{"version":3,"sources":["TeamMatch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TeamMatch.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div>\n    <b-form @submit.prevent=\"submit\">\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Game/Event name:\"\n                    label-for=\"name\">\n        <b-form-input id=\"name\"\n                      type=\"text\"\n                      required\n                      v-model=\"form.gameName\"\n                      placeholder=\"Enter name\">\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"date\"\n                    label=\"Game/Event date\"\n                    label-for=\"date\">\n        <b-form-input id=\"date\"\n                      type=\"date\"\n                      required\n                      v-model=\"form.date\"\n                      placeholder=\"dd/mm/yyyy\">\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"link\"\n                    label=\"Event Website\"\n                    label-for=\"link\">\n        <b-form-input id=\"link\"\n                      type=\"text\"\n                      required\n                      v-model=\"form.link\"\n                      placeholder=\"url of event\">\n        </b-form-input>\n      </b-form-group>\n      <!-- Styled -->\n      <b-form-file required v-model=\"main\" :state=\"Boolean(main)\" placeholder=\"Choose game/event photo\"></b-form-file>\n      <div v-if=\"main\" class=\"mt-3\">Selected file: {{main && main.name}} <i @click=\"main = null\" class=\"fa fa-close pointer\"></i></div>\n      <b-form-file required v-model=\"team1\" :state=\"Boolean(team1)\" placeholder=\"Choose team 1 photo\"></b-form-file>\n      <div v-if=\"team1\" class=\"mt-3\">Selected file: {{team1 && team1.name}} <i @click=\"team1 = null\" class=\"fa fa-close pointer\"></i></div>\n      <b-form-file required v-model=\"team2\" :state=\"Boolean(team2)\" placeholder=\"Choose team 2 photo\"></b-form-file>\n      <div v-if=\"team2\" class=\"mt-3\">Selected file: {{team2 && team2.name}} <i @click=\"team2 = null\" class=\"fa fa-close pointer\"></i></div>\n\n      <div style=\"margin-top: 20px; text-align: right\">\n        <div v-if=\"load\" class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        <b-button type=\"submit\" variant=\"primary\">Update</b-button>\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport api from \"@/services/RestService\"\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as moment from \"moment\";\n\nexport default {\n  name: \"edit-team-detail\",\n  props: ['data', 'modalProps'],\n  computed: {\n    ...mapGetters({\n      team: 'team/activeTeam'\n    }),\n  },\n  data() {\n    return {\n      load: false,\n      main: null,\n      team1: null,\n      team2: null,\n      form: {}\n    }\n  },\n  methods: {  \n    ...mapActions({\n      updateTeam: 'team/updateTeam'\n    }),\n    async submit() {\n      console.log(\"submitting\");\n      let that = this;\n      that.load = true;\n      var upload = null;\n\n      if(this.main) {\n        let formData = new FormData();\n        formData.append(\"file\", this.main);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.gamePic = upload.data.url;\n      }\n      if(this.team1) {\n        let formData = new FormData();\n        formData.append(\"file\", this.team1);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.team1Logo = upload.data.url;\n      }\n      if(this.team2) {\n        let formData = new FormData();\n        formData.append(\"file\", this.team2);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.team2Logo = upload.data.url;\n      }\n\n      if(this.modalProps && !isNaN(this.modalProps.model)) \n        this.team.matches.splice(this.modalProps.model, 1,{...this.form});\n      else\n        this.team.matches.push(this.form);\n\n      this.updateTeam({matches: this.team.matches})\n        .then(res => this.$emit('finish'))\n        .catch(err => this.$emit('finish'));\n    }\n  },\n  mounted() {\n    if(this.modalProps && !isNaN(this.modalProps.model))\n    {\n      this.form = {...this.team.matches[this.modalProps.model]};\n      this.form.date = moment(this.form.date).format('DD-MM-YYYY');\n    }\n    else\n      this.form = {}\n  }\n}\n</script>\n\n"]}]}