{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/views/Register.vue","mtime":1560173403559},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport VueAxios from 'vue-axios'\nimport VueAuthenticate from 'vue-authenticate'\nimport axios from 'axios';\n\nVue.use(VueAxios, axios)\n\nVue.use(VueAuthenticate, {\n    baseUrl: '/api/users', // Your API domain\n    \n    providers: {\n    facebook: {\n        tokenName: 'token',\n        response_type: 'token',\n        scope: ['email'],\n        // clientId: '417348775457290',\n        // clientSecret: 'f3d7ddd33c363a6439ed699884c24885',\n        appId: '291462354808106',\n        clientId: '291462354808106',\n        clientSecret: '44c44d786601319553fa31e097b24d85',\n        // redirectUri: 'http://www.wagergames.co/auth/callback' // Your client app URL\n        redirectUri: 'http://localhost:8080/auth/callback' // Your client app URL\n    }\n    }\n})\n\nexport default {\n    name: 'Register',\n    data() {\n        return {\n            name: '',\n            email: '',\n            password: '',\n            passwordConfirm: '',\n            error: null,\n            errorPassword: null,\n            load: false\n        }\n    },\n     beforeMount() {\n        let AddStyle = document.createElement('link')\n        AddStyle.type = \"text/css\";\n        AddStyle.rel = \"stylesheet\";\n        AddStyle.href = \"css/auth.css\";\n        AddStyle.id = \"auth\";\n        document.head.appendChild(AddStyle)\n    },\n    beforeDestroy() {\n        document.getElementById(\"auth\").disabled = true;\n        var stylesheet = document.getElementById('auth');\n        stylesheet.parentNode.removeChild(stylesheet);\n\n        const parsedParams = {};\n        window.location.hash.split('&')\n            .map(part => part.replace(/#/, ''))\n            .forEach(param => {\n                const parts = param.split('=');\n                parsedParams[parts[0]] = parts[1];\n            })\n\n        console.log('--- Out')\n        if (parsedParams.access_token != undefined) {\n            console.log('--- In')\n            this.$http.get('https://api.twitch.tv/kraken/user', {\n                params: {},\n                headers: {\n                    'Client-ID': 'g3hz4vlsl4062b4s8v81v1emky74aj',\n                    'Authorization': `OAuth ${parsedParams.access_token}`\n                }\n            }).then(function (response) {\n                this_.loginTwitch(response.data);\n                // this_.loginFB( response.data );\n            })\n        }\n    },\n     methods: {\n        register() {\n            if (this.password != this.passwordConfirm) {\n                this.errorPassword = \"Password and passwordConfirm did't mcatched\"\n                return false;\n            }\n            this.load = true;\n            this.$store.dispatch('register', {\n                username: this.name,\n                email: this.email,\n                password: this.password,\n                // passwordConfirm: this.passwordConfirm\n            })\n            .then(response => {\n                this.$store.dispatch('retriveToken', {\n                    email: this.email,\n                    password: this.password\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n            }).catch(error => {\n                console.log(error);\n            })\n        },\n        \n\n        loginTwitch(data) {\n            this.$store.dispatch('retriveTokenTwitch', {\n                    name: data.name,\n                    email: data.email,\n                    id: data._id,\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n        \n        authenticate: function (provider) {\n\n            if (this.$auth.isAuthenticated()) {\n                this.$auth.logout()\n            }\n\n            this.response = null\n\n            var this_ = this;\n            console.log(\"first\");\n\n            this.$auth.authenticate(provider).then(function (authResponse) {\n                var data = null;\n\n                var xhr = new XMLHttpRequest();\n                //xhr.withCredentials = true;\n                var that = this_;\n\n                xhr.addEventListener(\"readystatechange\", function (this_) {\n                    if (this.readyState === 4) {\n                        that.getFbDetails(JSON.parse(this.response).access_token);\n                    }\n                });\n\n                xhr.open(\"GET\", \"https://graph.facebook.com/v3.2/oauth/access_token?code=\"+this_.$auth.getToken()+\"&client_id=291462354808106&redirect_uri=http://localhost:8080/auth/callback&client_secret=44c44d786601319553fa31e097b24d85\");\n\n                xhr.send(data);\n            }).catch(function (err) {\n              this_.response = err\n            })\n        },\n        getFbDetails(accesstoken)\n        {\n            var this_ = this;\n            axios.get('https://graph.facebook.com/v3.2/me?fields=id,name,email,picture{url}&access_token=' + accesstoken).then(function (response) {\n                    this_.response = response;\n                    this_.$store.dispatch(\"retriveTokenSocial\", {\n                        username: response.data.name,\n                        email: response.data.email,\n                        provider: 'facebook',\n                        photoUrl: response.data.picture.data.url\n                    })\n                    .then(response => {\n                        this_.$router.push({\n                            name: 'home'\n                        });\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n                    //this_.loginFB( response.data );\n                })\n                .catch(err => console.log(err))\n        },\n    },\n    mounted() {\n        this.$refs.email.oninvalid = function(e) {\n            if(!e.target.value || e.target.value == '')\n                e.target.setCustomValidity(\"Please fill out this field\")\n            else\n                e.target.setCustomValidity(\"Please enter good email e.x name@mail.com\")\n        }\n        this.$refs.email.oninput = function(e) {\n            e.target.setCustomValidity(\"\");\n        };\n    }\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>              \n<div class=\"logo-section\">\n    <img src=\"img/logo.png\" class=\"img-logo\">\n</div>\n\n<!-- Main-Content -->\n<div class=\"main-w3layouts-form\">\n    <h2>Register to your account</h2>\n    <!-- main-w3layouts-form -->\n    <form @submit.prevent=\"register\" aria-label=\"Register\" method=\"post\">\n      \n        <div class=\"fields-w3-agileits\">\n            <span class=\"fa fa-user\" aria-hidden=\"true\"></span>\n            <input v-model=\"name\" id=\"name\" type=\"text\" class=\"form-control\" name=\"name\" value=\"\" required autofocus placeholder=\"username\">\n        </div>\n       \n            <span class=\"invalid-feedback\" role=\"alert\" style=\"color: red; margin-bottom: 10px; display: block;\">\n            <strong></strong>\n        </span>\n       \n        <div class=\"fields-w3-agileits\">\n            <span class=\"fa fa-envelope\" aria-hidden=\"true\"></span>\n            <input ref=\"email\" v-model=\"email\" id=\"email\" type=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" class=\"form-control\" name=\"email\" value=\"\" required autofocus placeholder=\"email\">\n        </div>\n       <span class=\"invalid-feedback\" role=\"alert\" style=\"color: red; margin-bottom: 10px; display: block;\">\n                                        <strong v-if=\"error\">{{ error }}</strong>\n                                  \n        </span>\n       \n        <div class=\"fields-w3-agileits\">\n            <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\n            <input v-model=\"password\" id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" required placeholder=\"password\">\n        </div>\n        \n            <span class=\"invalid-feedback\" role=\"alert\" style=\"color: red; margin-bottom: 10px; display: block;\">\n            <strong></strong>\n        </span>\n      \n        <div class=\"fields-w3-agileits\">\n            <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\n            <input v-model=\"passwordConfirm\" id=\"password-confirm\" type=\"password\" class=\"form-control\" name=\"password_confirmation\" required placeholder=\"confirm password\">\n        </div>\n         <span class=\"invalid-feedback\" role=\"alert\" style=\"color: red; margin-bottom: 10px; display: block;\">\n                                        <strong v-if=\"errorPassword\">{{ errorPassword }}</strong>\n                                  \n        </span>\n        <input type=\"submit\" value=\"Register\" /><br>\n        <div v-if=\"load\" class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    </form>\n    <!--// main-w3layouts-form -->\n    <!-- Social icons -->\n    <div class=\"footer_grid-w3ls\">\n        <h5 class=\"sub-hdg-w3l\">or your social profile</h5>\n        <ul class=\"social-icons-agileits-w3layouts\">\n            <li><a @click.prevent=\"authenticate('facebook')\" href=\"\" class=\"fa fa-facebook\"></a></li>\n            <li><a href=\"https://id.twitch.tv/oauth2/authorize?client_id=n9se5ttv1djl68jpjcib9vhzv5l6fy&redirect_uri=http://localhost:8080/login&response_type=token&scope=user_read\" class=\"fa fa-twitch\"></a></li>\n        </ul>\n    </div>\n    <!--// Social icons -->\n</div>\n    </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport VueAxios from 'vue-axios'\nimport VueAuthenticate from 'vue-authenticate'\nimport axios from 'axios';\n\nVue.use(VueAxios, axios)\n\nVue.use(VueAuthenticate, {\n    baseUrl: '/api/users', // Your API domain\n    \n    providers: {\n    facebook: {\n        tokenName: 'token',\n        response_type: 'token',\n        scope: ['email'],\n        // clientId: '417348775457290',\n        // clientSecret: 'f3d7ddd33c363a6439ed699884c24885',\n        appId: '291462354808106',\n        clientId: '291462354808106',\n        clientSecret: '44c44d786601319553fa31e097b24d85',\n        // redirectUri: 'http://www.wagergames.co/auth/callback' // Your client app URL\n        redirectUri: 'http://localhost:8080/auth/callback' // Your client app URL\n    }\n    }\n})\n\nexport default {\n    name: 'Register',\n    data() {\n        return {\n            name: '',\n            email: '',\n            password: '',\n            passwordConfirm: '',\n            error: null,\n            errorPassword: null,\n            load: false\n        }\n    },\n     beforeMount() {\n        let AddStyle = document.createElement('link')\n        AddStyle.type = \"text/css\";\n        AddStyle.rel = \"stylesheet\";\n        AddStyle.href = \"css/auth.css\";\n        AddStyle.id = \"auth\";\n        document.head.appendChild(AddStyle)\n    },\n    beforeDestroy() {\n        document.getElementById(\"auth\").disabled = true;\n        var stylesheet = document.getElementById('auth');\n        stylesheet.parentNode.removeChild(stylesheet);\n\n        const parsedParams = {};\n        window.location.hash.split('&')\n            .map(part => part.replace(/#/, ''))\n            .forEach(param => {\n                const parts = param.split('=');\n                parsedParams[parts[0]] = parts[1];\n            })\n\n        console.log('--- Out')\n        if (parsedParams.access_token != undefined) {\n            console.log('--- In')\n            this.$http.get('https://api.twitch.tv/kraken/user', {\n                params: {},\n                headers: {\n                    'Client-ID': 'g3hz4vlsl4062b4s8v81v1emky74aj',\n                    'Authorization': `OAuth ${parsedParams.access_token}`\n                }\n            }).then(function (response) {\n                this_.loginTwitch(response.data);\n                // this_.loginFB( response.data );\n            })\n        }\n    },\n     methods: {\n        register() {\n            if (this.password != this.passwordConfirm) {\n                this.errorPassword = \"Password and passwordConfirm did't mcatched\"\n                return false;\n            }\n            this.load = true;\n            this.$store.dispatch('register', {\n                username: this.name,\n                email: this.email,\n                password: this.password,\n                // passwordConfirm: this.passwordConfirm\n            })\n            .then(response => {\n                this.$store.dispatch('retriveToken', {\n                    email: this.email,\n                    password: this.password\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n            }).catch(error => {\n                console.log(error);\n            })\n        },\n        \n\n        loginTwitch(data) {\n            this.$store.dispatch('retriveTokenTwitch', {\n                    name: data.name,\n                    email: data.email,\n                    id: data._id,\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n        \n        authenticate: function (provider) {\n\n            if (this.$auth.isAuthenticated()) {\n                this.$auth.logout()\n            }\n\n            this.response = null\n\n            var this_ = this;\n            console.log(\"first\");\n\n            this.$auth.authenticate(provider).then(function (authResponse) {\n                var data = null;\n\n                var xhr = new XMLHttpRequest();\n                //xhr.withCredentials = true;\n                var that = this_;\n\n                xhr.addEventListener(\"readystatechange\", function (this_) {\n                    if (this.readyState === 4) {\n                        that.getFbDetails(JSON.parse(this.response).access_token);\n                    }\n                });\n\n                xhr.open(\"GET\", \"https://graph.facebook.com/v3.2/oauth/access_token?code=\"+this_.$auth.getToken()+\"&client_id=291462354808106&redirect_uri=http://localhost:8080/auth/callback&client_secret=44c44d786601319553fa31e097b24d85\");\n\n                xhr.send(data);\n            }).catch(function (err) {\n              this_.response = err\n            })\n        },\n        getFbDetails(accesstoken)\n        {\n            var this_ = this;\n            axios.get('https://graph.facebook.com/v3.2/me?fields=id,name,email,picture{url}&access_token=' + accesstoken).then(function (response) {\n                    this_.response = response;\n                    this_.$store.dispatch(\"retriveTokenSocial\", {\n                        username: response.data.name,\n                        email: response.data.email,\n                        provider: 'facebook',\n                        photoUrl: response.data.picture.data.url\n                    })\n                    .then(response => {\n                        this_.$router.push({\n                            name: 'home'\n                        });\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n                    //this_.loginFB( response.data );\n                })\n                .catch(err => console.log(err))\n        },\n    },\n    mounted() {\n        this.$refs.email.oninvalid = function(e) {\n            if(!e.target.value || e.target.value == '')\n                e.target.setCustomValidity(\"Please fill out this field\")\n            else\n                e.target.setCustomValidity(\"Please enter good email e.x name@mail.com\")\n        }\n        this.$refs.email.oninput = function(e) {\n            e.target.setCustomValidity(\"\");\n        };\n    }\n}\n</script>\n\n<style>\n.lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 64px;\n  height: 64px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 51px;\n  height: 51px;\n  margin: 6px;\n  border: 6px solid #fff;\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #fff transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"]}]}