{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/game/challenge.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/game/challenge.vue","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\nimport { constants } from 'fs';\nimport { setTimeout } from 'timers';\nexport default {\n    data(){\n        return{\n         selected:null, \n         bet_ammount:0,\n         challenge_started:false,\n         challenge_notification:{},\n          winner:'',\n          loser:'',\n          showGetChallengeResult:false,\n          showChallengeRequest:false,\n          showChallengeResult:false,\n          showDisputeForm:false,\n          showChallengeDispute:false,\n          selected:'',\n          file:'',\n          CT_selected:'',\n          contact_details:'',\n          additional_comments:'',\n          winamount: 0,\n        }  \n    },\n    sockets:{\n    \n      Challenge_acception:function(data){\n          console.log(data);\n          this.challenge_started=true;\n          this.SetStatus('Started');  \n          this.start_challenge();\n      }, \n      Challenge_rejection:function(data){\n\n      },\n      Result:function(data){\n           this.winner=data.data.Winner;\n           this.loser=data.data.Loser;\n          \n           this.SetStatus('Finished');\n           this.showChallengeResult=true;     \n   \n      }\n    },\n    computed:{ \n        ...mapGetters({\n            getOponent:'get_Oponent',\n            getChallenger:'get_Challenger',\n            getGame:'Get_game_Challenge',\n            get_error:'Get_c_error',\n            get_Challenge:'Get_Challenge',\n            get_Game:'get_game',\n            challenge_status:'getChallengeStatus',\n            getChallenge:'get_challenge',\n            getUserName:'getUserName',\n\n        }),\n        \n    },\n    beforeDestroy(){\n          this.SetStatus('');\n    },\n\n    methods:{\n  getTotal()\n{\n    var winamount = bet_ammount * 1.8                      \n},\n\n        submit_dispute(){\n            \n         this.RegisterDispute({\n             challenge_id:this.getChallenge._id,\n             Contact_Source:this.CT_selected,\n             Contact_Details:this.contact_details,\n             add_comments:this.additional_comments,\n             DisputeImage:this.file\n         });\n         setTimeout(()=>{\n            this.$router.push('/h2h/mobile/mobilelegends/details');\n         },15000)  \n        },\n        \n        result_modal(){\n            console.log(\"asjakj\")\n           this.showGetChallengeResult=true;\n        },\n        win_notification(){\n            let loser='';\n            \n            if(this.getChallenger==this.getUserName){\n                loser=this.getOponent;\n            }\n            else{\n                loser=this.getChallenger\n            }\n            console.log(\"winnner\") \n            console.log(this.getChallenge._id)\n         this.$socket.emit('result_notification',{\n             receiver:loser,\n             room:'Mobile Legends:Bang Bang',    \n             challenge_id:this.getChallenge._id,\n             Winner:this.getUserName,\n             Loser:loser,\n         });\n          this.showGetChallengeResult=false;\n        },\n        lose_notification(){\n            let winner='';\n            if(this.getChallenger==this.getUserName){\n                winner=this.getOponent;\n            }\n            else{\n                winner=this.getChallenger\n            }\n            console.log(\"loser\")\n         this.$socket.emit('result_notification',{  \n             receiver:winner,\n             room:'Mobile Legends:Bang Bang',    \n             challenge_id:this.getChallenge._id,\n             Winner:winner,\n             Loser:this.getUserName,\n         });  \n          this.showGetChallengeResult=false;\n        },\n         send_notification(){\n             \n         this.$socket.emit('challenge_notification',{ \n             challenger:this.getChallenger,\n             game:this.getGame.game_name,   \n             bet:this.bet_ammount,\n             receiver:this.getOponent,\n             room:this.get_Game.ShortName.toLowerCase(),    \n            });   \n            this.showChallengeRequest=false;\n            this.SetStatus('waiting');\n            console.log(this.challenge_status);\n         },\n        \n        start_challenge(){   \n            let data={    \n             oponent:this.getOponent, \n             challenger:this.getChallenger,\n             game:'Mobile Legends:Bang Bang',   \n              \n         };\n         console.log(data)\n         this.Start_Challenge(data);\n         this.$refs['my-modal'].hide()\n        },   \n        handleFileUpload(event){\n           \n         event.preventDefault();\n         this.file=event.target.files[0];  \n         console.log(this.file);  \n\n        }, \n        ...mapActions({\n            Start_Challenge:'AsyncStartChallenge', \n            SetStatus:'AsyncChallengeStatus',\n            RegisterDispute:'AsyncSubmitDispute',\n        }),\n    }\n}\n",{"version":3,"sources":["challenge.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"challenge.vue","sourceRoot":"src/components/game","sourcesContent":["<template>\n    <div class=\"col-md-8 main-content\">\n\n  <b-card >  \n            \n  <h1 style=\" font-family: Shojumaru; color: black;\">{{getGame.game_name}}</h1>\n\n  <v-divider/>\n\n     \n\n\n\n\n     \n      <b-row>\n<b-col>\n      <b-card>\n <h3 class=\"Challenger\">{{getChallenger}}\n     </h3> \n      <img style=\"float: right;\" class=\"avatar\" src=\"images/fortnite.jpg\"/>\n </b-card>\n    </b-col>\n    <b-col cols=\"auto\">\n          <h1 style=\" font-family: Shojumaru; color: black; relative; margin-top: 20px;\" >VS</h1>\n          </b-col>\n <b-col>\n <b-card>\n\n      <img style=\"float: left;\" class=\"avatar\" src=\"images/fortnite.jpg\"/>\n      <h3 class=\"Oponent\">{{getOponent}}</h3>\n</b-card>\n</b-col>\n      </b-row>\n\n      <br>\n      \n<b-row>\n    <b-col>\n         <b-input-group size=\"lg\" prepend=\"$\" append=\"USD\">\n    <b-form-input\n    v-if=\"!challenge_status\"\n          id=\"input-1\"\n          v-model=\"bet_ammount\"\n          type=\"number\"\n          required\n          placeholder=\"Enter amount\"\n          style=\"width: 10%;\"\n          min=\"0\"\n        >  </b-form-input>\n         </b-input-group>\n    </b-col>\n\n</b-row>\n <h1 style=\" font-family: Shojumaru; color: black;\">Win Amount: {{bet_ammount*1.8}} </h1>\n\n     <br>\n    <b-button v-if=\"!challenge_status\" :disabled=\" bet_ammount<=0\" variant=\"outline-primary\" v-on:click=\"()=>{this.showChallengeRequest=true;}\" block>Challenge</b-button>\n\n       <h1 v-if=\"challenge_status\">{{challenge_status}}</h1>  \n\n         <div v-if=\"challenge_status && challenge_status=='Finished'\" class=\"Challenger\">\n             <h4>Winner {{winner}}</h4>\n         </div>\n\n         <div v-if=\"challenge_status && challenge_status=='Finished'\" class=\"Oponent\">\n             <h4>Loser {{loser}}</h4>\n         </div>\n         <h4 v-if=\"getChallenge && challenge_status\">challenge_id:{{getChallenge._id}}</h4>\n\n\n\n<b-button v-if=\"getChallenge && (challenge_status && challenge_status!='Finished')\"  variant=\"outline-primary\" v-on:click=\"result_modal\">submit results</b-button>\n\n<b-button v-if=\"challenge_status && challenge_status=='Finished'\" variant=\"outline-primary\"  v-on:click=\"()=>{this.showChallengeDispute=true;}\">Dispute</b-button>\n\n<b-button v-if=\"challenge_status && (challenge_status=='Finished')\" variant=\"outline-primary\"  v-on:click=\"()=>{this.$router.push('/h2h/mobile/mobilelegends/details');}\">Back to ChatRoom</b-button>\n\n\n  </b-card>  \n\n  \n  \n        \n\n  \n<b-alert :show=\"showGetChallengeResult\"  dismissible variant=\"light\" ref=\"result-modal\" id=\"modal-2\" title=\"Result\" hide-footer>\n    <p class=\"my-4\">Did you win or lose?</p>\n \n         \n    <b-button v-on:click=\"win_notification\" style=\"margin:5%;\" variant=\"outline-primary\">win</b-button>   \n    <b-button v-on:click=\"lose_notification\" style=\"margin:5%;\" variant=\"outline-primary\">lose</b-button>   \n \n</b-alert>   \n\n\n\n  <b-alert :show=\"showChallengeResult\"  dismissible variant=\"light\" ref=\"Result-modal\" id=\"modal-3\" title=\"Result\" hide-footer>\n    \n    <h1>Winner:{{winner}}</h1><br>\n    <h1>Loser:{{loser}}</h1>\n         \n    \n  </b-alert>   \n\n \n\n  <b-alert :show=\"showChallengeRequest\"  dismissible variant=\"light\" ref=\"my-modal\" id=\"modal-1\" title=\"Challenge\" hide-footer>\n    <p class=\"my-4\">Are you sure ?</p>\n\n         <span class=\"error\" v-if=\"get_error\">{{get_error.msg}}</span>\n    <b-button v-on:click=\"send_notification\" style=\"margin:5%;\" variant=\"outline-primary\">yes</b-button>   \n    <b-button v-on:click=\"()=>{this.showChallengeRequest=false}\" style=\"margin:5%;\" variant=\"outline-primary\">no</b-button>\n \n  </b-alert>   \n\n\n  <b-alert :show=\"showChallengeDispute\"  dismissible variant=\"light\" ref=\"my-modal\" id=\"modal-1\" title=\"Challenge\" hide-footer>\n    <p class=\"my-4\"> Here at WagerGames we take disputes seriously.\n         Both financial and account penalties will be applied upon verification of a party supplying false information,\n          including false disputes</p>\n\n        <br>\n        \n         <b-form-group label=\"Did you win or loose?\">\n      <b-form-radio v-model=\"selected\" name=\"some-radios\" value=\"win\">Win</b-form-radio>\n      <b-form-radio v-model=\"selected\" name=\"some-radios\" value=\"loose\">Loose</b-form-radio>\n    </b-form-group>\n      <label>Upload screenshot of result screen</label>\n      <input type=\"file\"  v-on:change=\"handleFileUpload\" />\n\n      <label>Content Type</label>\n       <b-form-select v-model=\"CT_selected\" class=\"mb-3\">\n      <option :value=\"null\">Please select an option</option>\n      <option value=\"skype\">Skype</option>\n      <option value=\"email\">Email</option>\n      <option value=\"facebook\">Facebook</option>\n      <option value=\"telegram\">Telegram</option>\n    </b-form-select>\n      \n     <b-form-textarea\n      id=\"textarea\"\n      v-model=\"contact_details\"\n      placeholder=\"Contact Details \"\n      rows=\"3\"\n      max-rows=\"6\"\n    ></b-form-textarea>\n\n     <b-form-textarea\n      id=\"textarea1\"\n      v-model=\"additional_comments\"\n      placeholder=\"Aditional Comments\"\n      rows=\"3\"\n      max-rows=\"6\"\n    ></b-form-textarea>\n\n   <b-button v-on:click=\"submit_dispute\" style=\"margin:5%;\" variant=\"outline-primary\" v-b-modal.dispute-1>submit dispute</b-button>   \n \n  </b-alert>   \n \n\n \n  <b-modal id=\"dispute-1\" title=\"BootstrapVue\" hide-footer>\n    <p class=\"my-4\">Thankyou. We will look into this and contact you as soon as possible</p>\n  </b-modal>    \n\n\n  \n  \n  \n\n  \n\n\n\n            </div>\n          \n  \n\n     \n\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { constants } from 'fs';\nimport { setTimeout } from 'timers';\nexport default {\n    data(){\n        return{\n         selected:null, \n         bet_ammount:0,\n         challenge_started:false,\n         challenge_notification:{},\n          winner:'',\n          loser:'',\n          showGetChallengeResult:false,\n          showChallengeRequest:false,\n          showChallengeResult:false,\n          showDisputeForm:false,\n          showChallengeDispute:false,\n          selected:'',\n          file:'',\n          CT_selected:'',\n          contact_details:'',\n          additional_comments:'',\n          winamount: 0,\n        }  \n    },\n    sockets:{\n    \n      Challenge_acception:function(data){\n          console.log(data);\n          this.challenge_started=true;\n          this.SetStatus('Started');  \n          this.start_challenge();\n      }, \n      Challenge_rejection:function(data){\n\n      },\n      Result:function(data){\n           this.winner=data.data.Winner;\n           this.loser=data.data.Loser;\n          \n           this.SetStatus('Finished');\n           this.showChallengeResult=true;     \n   \n      }\n    },\n    computed:{ \n        ...mapGetters({\n            getOponent:'get_Oponent',\n            getChallenger:'get_Challenger',\n            getGame:'Get_game_Challenge',\n            get_error:'Get_c_error',\n            get_Challenge:'Get_Challenge',\n            get_Game:'get_game',\n            challenge_status:'getChallengeStatus',\n            getChallenge:'get_challenge',\n            getUserName:'getUserName',\n\n        }),\n        \n    },\n    beforeDestroy(){\n          this.SetStatus('');\n    },\n\n    methods:{\n  getTotal()\n{\n    var winamount = bet_ammount * 1.8                      \n},\n\n        submit_dispute(){\n            \n         this.RegisterDispute({\n             challenge_id:this.getChallenge._id,\n             Contact_Source:this.CT_selected,\n             Contact_Details:this.contact_details,\n             add_comments:this.additional_comments,\n             DisputeImage:this.file\n         });\n         setTimeout(()=>{\n            this.$router.push('/h2h/mobile/mobilelegends/details');\n         },15000)  \n        },\n        \n        result_modal(){\n            console.log(\"asjakj\")\n           this.showGetChallengeResult=true;\n        },\n        win_notification(){\n            let loser='';\n            \n            if(this.getChallenger==this.getUserName){\n                loser=this.getOponent;\n            }\n            else{\n                loser=this.getChallenger\n            }\n            console.log(\"winnner\") \n            console.log(this.getChallenge._id)\n         this.$socket.emit('result_notification',{\n             receiver:loser,\n             room:'Mobile Legends:Bang Bang',    \n             challenge_id:this.getChallenge._id,\n             Winner:this.getUserName,\n             Loser:loser,\n         });\n          this.showGetChallengeResult=false;\n        },\n        lose_notification(){\n            let winner='';\n            if(this.getChallenger==this.getUserName){\n                winner=this.getOponent;\n            }\n            else{\n                winner=this.getChallenger\n            }\n            console.log(\"loser\")\n         this.$socket.emit('result_notification',{  \n             receiver:winner,\n             room:'Mobile Legends:Bang Bang',    \n             challenge_id:this.getChallenge._id,\n             Winner:winner,\n             Loser:this.getUserName,\n         });  \n          this.showGetChallengeResult=false;\n        },\n         send_notification(){\n             \n         this.$socket.emit('challenge_notification',{ \n             challenger:this.getChallenger,\n             game:this.getGame.game_name,   \n             bet:this.bet_ammount,\n             receiver:this.getOponent,\n             room:this.get_Game.ShortName.toLowerCase(),    \n            });   \n            this.showChallengeRequest=false;\n            this.SetStatus('waiting');\n            console.log(this.challenge_status);\n         },\n        \n        start_challenge(){   \n            let data={    \n             oponent:this.getOponent, \n             challenger:this.getChallenger,\n             game:'Mobile Legends:Bang Bang',   \n              \n         };\n         console.log(data)\n         this.Start_Challenge(data);\n         this.$refs['my-modal'].hide()\n        },   \n        handleFileUpload(event){\n           \n         event.preventDefault();\n         this.file=event.target.files[0];  \n         console.log(this.file);  \n\n        }, \n        ...mapActions({\n            Start_Challenge:'AsyncStartChallenge', \n            SetStatus:'AsyncChallengeStatus',\n            RegisterDispute:'AsyncSubmitDispute',\n        }),\n    }\n}\n</script>\n <style scoped>\n.title{\n    text-align: center;\n}\n.CO{\n    display: flex;\n    flex-direction: row;\n}\n.Challenger,.modes{\n    float: left;\n    \n}\n.Oponent{\n    float: right;\n    \n}\n.error{\n    color: red;\n}\n.modes{\n    float: left;\n}\n.avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n @font-face { font-family: Shojumaru; src: url('/css/fonts/shojumaru-regular.ttf'); }\n\n</style>\n\n\n"]}]}