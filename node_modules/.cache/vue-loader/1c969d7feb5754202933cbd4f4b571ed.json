{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/CreateTeam.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/CreateTeam.vue","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from \"@/services/RestService\"\nimport { mapActions } from \"vuex\";\nimport Notification from \"@/mixins/Notification\";\n\nexport default {\n  name: \"create-team\",\n  props: ['modalProps'],\n  mixins: [Notification],\n  data() {\n    return {\n      cover: '',\n      profile: '',\n      form: {},\n      load: false\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    ...mapActions({\n      createTeam: \"team/createTeam\"\n    }),\n    async submit() {\n      var upload = null;\n\n      if(this.cover) {\n        let formData = new FormData();\n        formData.append(\"file\", this.cover);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.coverImg = upload.data.url;\n      }\n      if(this.profile) {\n        let formData = new FormData();\n        formData.append(\"file\", this.profile);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.profileImg = upload.data.url;\n      }\n\n      this.createTeam(this.form)\n        .then(res => {this.showToast(res.message); this.$emit('finish'); this.$router.push('/team/' + res.response._id)})\n        .catch(err => {this.showToast(err, \"error\"), this.$emit('finish')});\n    }\n  }\n}\n",{"version":3,"sources":["CreateTeam.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"CreateTeam.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div>\n    <b-form @submit.prevent=\"submit\">\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Team Name:\"\n                    label-for=\"name\">\n        <b-form-input id=\"name\"\n                      type=\"text\"\n                      v-model=\"form.teamName\"\n                      required\n                      placeholder=\"Enter name\">\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"founder\"\n                    label=\"Founder\"\n                    label-for=\"founder\">\n        <b-form-input id=\"founder\"\n                      type=\"text\"\n                      v-model=\"form.founder\"\n                      required\n                      placeholder=\"founder name\">\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"owner\"\n                    label=\"Owner\"\n                    label-for=\"owner\">\n        <b-form-input id=\"owner\"\n                      type=\"text\"\n                      required\n                      v-model=\"form.ownerName\"\n                      placeholder=\"owner name\">\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"location\"\n                    label=\"Location\"\n                    label-for=\"location\">\n        <b-form-textarea id=\"location\"\n                      v-model=\"form.location\"\n                      required\n                      :rows=\"3\">\n        </b-form-textarea>\n      </b-form-group>\n      <!-- Styled -->\n      <div class=\"mb-3\">\n        <b-form-file required v-model=\"cover\" placeholder=\"Choose cover photo\"></b-form-file>\n        <div v-if=\"cover\" class=\"mt-1\">Selected file: {{cover && cover.name}} <i @click=\"cover = null\" class=\"pointer fa fa-close\"></i></div>\n      </div>\n      <div class=\"mb-3\">\n        <b-form-file required v-model=\"profile\" placeholder=\"Choose profile photo\"></b-form-file>\n        <div v-if=\"profile\" class=\"mt-1\">Selected file: {{profile && profile.name}} <i @click=\"profile = null\" class=\"pointer fa fa-close\"></i></div>\n      </div>\n\n      <div style=\"margin-top: 20px; text-align: right\">\n        <div v-if=\"load\" class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        <b-button type=\"submit\" variant=\"primary\">Update</b-button>\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport api from \"@/services/RestService\"\nimport { mapActions } from \"vuex\";\nimport Notification from \"@/mixins/Notification\";\n\nexport default {\n  name: \"create-team\",\n  props: ['modalProps'],\n  mixins: [Notification],\n  data() {\n    return {\n      cover: '',\n      profile: '',\n      form: {},\n      load: false\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    ...mapActions({\n      createTeam: \"team/createTeam\"\n    }),\n    async submit() {\n      var upload = null;\n\n      if(this.cover) {\n        let formData = new FormData();\n        formData.append(\"file\", this.cover);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.coverImg = upload.data.url;\n      }\n      if(this.profile) {\n        let formData = new FormData();\n        formData.append(\"file\", this.profile);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.profileImg = upload.data.url;\n      }\n\n      this.createTeam(this.form)\n        .then(res => {this.showToast(res.message); this.$emit('finish'); this.$router.push('/team/' + res.response._id)})\n        .catch(err => {this.showToast(err, \"error\"), this.$emit('finish')});\n    }\n  }\n}\n</script>\n\n"]}]}