{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Inbox/PublicInbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Inbox/PublicInbox.vue","mtime":1560173403547},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n  \nimport { mapActions,mapGetters } from 'vuex';\nimport { constants } from 'fs';\n\nexport default { \n           \n    name:'PublicInbox',  \n    data(){\n        return {\n       messages:[],\n       message:'',      \n       chatRoom:'',       \n       self:'',\n       username:'',\n       notification_msg:'',    \n       online_users:[],\n       isPublic:true,  \n       private_user:'',  \n       messages_private:[], \n       H2HMobileMobileLegendsPlayers: 500,\n       challenge_notification:{}, \n       showChallengeNotification:false,\n        } \n       },  \n       computed:{\n         ...mapGetters({\n                get_Game:'get_game',\n                \n         }),\n         \n         \n       },\n        sockets:{\n        \n        Challenge_notification:function(data){\n            console.log(\"hello got challlenge request\");\n            console.log(data);\n            this.challenge_notification=data.data;\n            this.showChallengeNotification=true;\n      },\n       notification:function(data){\n           //this.messages.push(data.data);\n          this.online_users=data.online_users.filter((value)=>{\n               console.log(this.username)\n               if(value.name != this.username) \n               {\n                   console.log(value.name)\n                  \n                  return value;\n               }\n           });\n           console.log(\"hello:\"+this.online_users)\n       }, \n       join_room:function(data){\n           console.log(\"msgsksjdasjdask\")\n           console.log(data.msgs)    \n           this.messages=data.msgs;\n           console.log(this.messages[0].Message.username);\n           console.log(this.messages[0].Message.msg);\n           console.log(this.messages[0].Day);\n       this.username=data.data; \n       \n       this.SetUserName(this.username); \n     this.online_users = data.online_users.filter((value)=>{\n           console.log(this.username)\n               if(value.name != this.username)\n               {\n                   console.log(value)\n                  return value;\n               }      \n           });         \n           console.log(\"179 online users\");\n       console.log(typeof this.online_users)\n       console.log(this.online_users)    \n       console.log(\"no of online users\"+this.online_users.length) \n       },    \n       notification_msg:function(data){   \n          \n          console.log(data.data.msg)\n          if(data.data.msg.Message.username!=this.username){\n        var audio=new Audio('http://soundbible.com/mp3/Air Plane Ding-SoundBible.com-496729130.mp3');\n           audio.play();\n          \n          }\n           console.log(data.data.msg)\n           this.messages.push(data.data.msg);     \n\n       }, \n       notification_private:function(data){\n           var audio=new Audio('http://soundbible.com/mp3/Air Plane Ding-SoundBible.com-496729130.mp3');\n           console.log(\"audio\")\n           console.log(audio)\n           audio.play();\n           \n          this.messages_private.push(data.data);\n          console.log(this.messages_private.length)\n       }, \n       private_msg:function(data){\n           if(data.data.Message.username!=this.username){\n                \n            var audio=new Audio('http://soundbible.com/mp3/Air Plane Ding-SoundBible.com-496729130.mp3');\n           console.log(\"audio\")\n           console.log(audio)\n           audio.play();\n           }\n           console.log(\"private msgs hello hello \")\n           console.log(data.data);\n          this.messages_private.push(data.data);\n          console.log(this.isPublic)\n          if(this.isPublic){\n              this.online_users.filter((value)=>{\n                  console.log(value.name+\"==\"+data.data.Message.username);\n                  \n                  if(value.name == data.data.Message.username){\n                      value.unseen_msgs=value.unseen_msgs+1;  \n                      console.log(\"increased unseen\");\n                  } \n              })\n          }\n       },\n       leave:function(data){\n       this.online_users=data.online_users.filter((value)=>{\n               if(value.name != this.username  )\n               {\n                   console.log(value.username)  \n                   return value.username;\n               }\n           });     \n           \n       },\n       Private_Inbox:function(data){\n           this.messages_private=data.msgs;\n       }   \n    },       \n    mounted(){         \n        this.messages=[]; \n\n        this.chatRoom='Mobile Legends:Bang Bang';\n        \n        let data={     \n            room:this.chatRoom,    \n            token:localStorage.getItem('token')     \n        };  \n       this.$socket.emit('join_room',data); \n         \n      },\n \n    methods:{\n        ...mapActions({\n              set_challenger:'AsyncSetChallenger',     \n              SetStatus:'AsyncChallengeStatus',\n              SetUserName:'AsyncSetUserName',\n              StartChallenge:'AsyncStartChallenge'\n        }),\n\n\n\n        challenge_user(user){      \n             this.set_challenger({\n                 oponent:user,\n                 challenger:this.username\n             });\n             \n         this.$router.push('/h2h/mobile/mobilelegends/challenge');\n        },\n     \n     challenge_accepted(){ \n\n         this.$socket.emit('challenge_accepted',{    \n             \n             challenger:this.challenge_notification.challenger,\n             game:'Mobile Legends:Bang Bang',   \n             bet:this.challenge_notification.bet_ammount,\n             receiver:this.challenge_notification.challenger,\n             room:'Mobile Legends:Bang Bang',  \n              \n            });    \n\n            this.SetStatus('Started');  \n            \n         this.showChallengeNotification=false;\n\n         this.set_challenger({\n                 oponent:this.username,\n                 challenger:this.challenge_notification.challenger,\n                            });     \n   \n         this.$router.push('/h2h/mobile/mobilelegends/challenge');     \n\n        },  \n        challenge_rejected(){\n          this.$socket.emit('challenge_rejected',{ \n           challenger:this.challenge_notification.challenger,\n             game:\"Mobile Legends:Bang Bang\",   \n             bet:this.challenge_notification.bet_ammount,\n             room:'Mobile Legends:Bang Bang',    \n            });    \n         this.showChallengeNotification=false;\n        },\n\n\n\n\n        check_private_user(user){\n            console.log(user);\n          if(user==this.private_user){\n              return true;\n          }\n          else{\n              return false;\n          }\n        },\n       switch_to_public_chat(){\n            this.isPublic=true;\n            this.messages_private=[];  \n            this.private_user='';\n             this.messages=[]; \n\n        this.chatRoom='Mobile Legends:Bang Bang';\n        \n        let data={     \n            room:this.chatRoom,    \n            token:localStorage.getItem('token')     \n        };  \n       this.$socket.emit('join_room',data); \n       }, \n      send_msg(e){       \n          e.preventDefault();\n        console.log(this.message)\n        let data={  \n            msg:this.message,    \n            room:'Mobile Legends:Bang Bang',    \n            token:localStorage.getItem('token')  \n        }\n        this.message='';\n        this.$socket.emit('public_msg',data);   \n    \n        \n      },\n      send_private_msg(e){\n            console.log(this.private_user)\n            e.preventDefault();  \n            let data={\n            msg:this.message,  \n            room:'Mobile Legends:Bang Bang',    \n            token:localStorage.getItem('token'),\n            receiver:this.private_user,\n            }\n             \n            this.$socket.emit('private_msg',data);  \n             this.message='';  \n             console.log(\"155:\"+this.message);  \n      },   \n      private_chat(name){\n             console.log(\"name:\"+name.name)\n             this.private_user=name.name;\n             this.isPublic=false;       \n             \n             let data={\n                token:localStorage.getItem('token'),\n                 username:name.name,\n                 room:'Mobile Legends:Bang Bang'\n             }\n             this.$socket.emit('private_inbox',data);\n      },       \n        getClass(data){ \n            \n             if(data.type=='notification'){\n                 this.self=true;\n               return 'notification'\n           }       \n          else if(data.name==this.username){\n              this.self=true;\n            return 'self'\n            }\n           else{\n               this.self=false;\n               return 'other'\n           }    \n         \n        }\n      \n  \n    }\n}\n",{"version":3,"sources":["PublicInbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA","file":"PublicInbox.vue","sourceRoot":"src/components/Inbox","sourcesContent":["<template>\n    <div style=\"margin-left: -25px;\" id=\"public-inbox\">  \n        <strong style=\"float: left\"> Public Chat</strong>\n             <strong style=\"position: relative; left: 135px;\"> Online Users</strong>\n        <b-row style=\"  \n overflow-y: scroll; width: 110%\">\n            <b-col sm=\"8\">\n        <div v-if=\"isPublic\">\n      <div  class=\"chat-box\">      \n          <div v-if=\"messages\" >  \n            <div v-for=\"(msg,index) in messages\" :key=\"index\" \n            class=\"msg\" v-bind:class=\"getClass(msg)\"\n            >\n\n            <span v-if=\"!self\"> \n            <div class=\"dropdown\">\n                <img class=\"avatar dropbtn\" src=\"images/fortnite.jpg\"/>\n<!--PROFILE MENU -->\n                  <div class=\"dropdown-content\">\n    <a >Message &nbsp;<font-awesome-icon style=\"bottom: 20px;\" icon=\"envelope\" class=\"fa-2x\" /></a>\n    <a >Challenge &nbsp;<font-awesome-icon  icon=\"comment-dollar\" class=\"fa-2x\" /></a>\n  </div>\n  </div>\n                <strong>&nbsp;{{msg.Message.username}}:</strong> \n         \n            \n            &nbsp;</span> \n\n            <span>{{msg.Message.msg}}</span>    <br>\n            <sub>{{msg.Time}} {{msg.Date}} {{msg.Day}}</sub>\n            </div>  \n        </div>              \n      </div>   \n         </div>\n        \n      <div v-if=\"!isPublic\">\n    <b-row>\n        <b-col>\n      <h1 style=\"font-size:20px; text-align: left;\">Chatting with  <b-badge class=\"badge badge-pill badge-dark\">{{ private_user.username }} <img class=\"avatar\" src=\"images/fortnite.jpg\"/></b-badge>           </h1> \n\n </b-col>   \n <b-col>\n                         <b-button variant=\"info\" block\n                         style=\"position: relative; top: 10px;\"\n           v-if=\"!isPublic\"\n           v-on:click=\"switch_to_public_chat\">\n           Return to the chat room</b-button> \n </b-col>\n </b-row>  \n\n      <div  class=\"private-chat-box\">\n        <div v-if=\"messages_private\" >  \n            \n            <div v-for=\"(msg,index) in messages_private\" :key=\"index\" \n            class=\"msg\" v-bind:class=\"getClass(msg)\"\n            ><span v-if=\"!self\"><b-badge pill variant=\"dark\">{{msg.Message.username}}:</b-badge>&nbsp;</span>\n            <span>{{msg.Message.msg}}</span> <br> \n            <sub>{{msg.Date}} {{msg.Time}} {{msg.Day}}</sub>             \n            </div>  \n        </div> \n    </div>\n    </div>                \n      <div class=\"form\">  \n          <input type=\"text\" class=\"write-msg-field\" v-model=\"message\"/>\n          <button v-if=\"isPublic\" class=\"btn btn-primary send-msg\" v-on:click=\"send_msg\">Send</button>    \n          <button v-if=\"!isPublic\" class=\"btn btn-primary\" v-on:click=\"send_private_msg\">Send</button>  \n      </div>\n</b-col>\n      <b-col sm=\"4\">\n      <div v-if=\"isPublic\"> \n     \n\n          <b-list-group style=\" text-align: left; align-content: left;\" v-if=\"online_users\">  \n    \n              <b-list-group-item  style=\"\"  v-for=\"(user,index) in online_users\" :key=\"index\">        \n            \n               <div class=\"dropdown\">   <b-img class=\"avatar dropbtn\" src=\"images/fortnite.jpg\" />\n                  \n                  <strong>&nbsp;{{ user.name }} </strong><br>\n                  <span style=\"color:red;\">{{ user.unseen_msgs }} unread messages  </span>\n\n<div class=\"dropdown-content\">\n    <a v-on:click=\"private_chat(user)\">Message &nbsp;<font-awesome-icon style=\"bottom: 20px;\" icon=\"envelope\" class=\"fa-2x\" /></a>\n    <a v-on:click=\"challenge_user(user)\">Challenge &nbsp;<font-awesome-icon  icon=\"comment-dollar\" class=\"fa-2x\" /></a>\n  </div>\n              \n</div>\n              </b-list-group-item>       \n                                \n          </b-list-group>  \n   \n          <p v-else>0 users online</p>   \n    \n          </div>    \n            <button class=\"btn btn-primary\"\n           v-if=\"!isPublic\"\n           v-on:click=\"switch_to_public_chat\">\n           public chat</button>       \n  </b-col>\n                    </b-row> \n                    \n          <b-alert :show=\"showChallengeNotification\"  dismissible variant=\"light\" ref=\"challenge_notification\" id=\"modal-1\" title=\"Challenge\" hide-footer>\n    <p class=\"my-4\">challenge notification</p>\n\n         <span  >challenger name: {{challenge_notification.challenger}}</span><br>\n         <span  >Game name:{{challenge_notification.game}}</span><br>\n         <span  >Bet Amount:{{challenge_notification.bet}}</span>  <br>\n         \n    <b-button v-on:click=\"challenge_accepted\" style=\"margin:5%;\" variant=\"outline-primary\">yes</b-button>   \n    <b-button v-on:click=\"challenge_rejected\" style=\"margin:5%;\" variant=\"outline-primary\">no</b-button>\n \n          </b-alert>    \n                        \n    </div> \n       \n</template>  \n<script>  \nimport { mapActions,mapGetters } from 'vuex';\nimport { constants } from 'fs';\n\nexport default { \n           \n    name:'PublicInbox',  \n    data(){\n        return {\n       messages:[],\n       message:'',      \n       chatRoom:'',       \n       self:'',\n       username:'',\n       notification_msg:'',    \n       online_users:[],\n       isPublic:true,  \n       private_user:'',  \n       messages_private:[], \n       H2HMobileMobileLegendsPlayers: 500,\n       challenge_notification:{}, \n       showChallengeNotification:false,\n        } \n       },  \n       computed:{\n         ...mapGetters({\n                get_Game:'get_game',\n                \n         }),\n         \n         \n       },\n        sockets:{\n        \n        Challenge_notification:function(data){\n            console.log(\"hello got challlenge request\");\n            console.log(data);\n            this.challenge_notification=data.data;\n            this.showChallengeNotification=true;\n      },\n       notification:function(data){\n           //this.messages.push(data.data);\n          this.online_users=data.online_users.filter((value)=>{\n               console.log(this.username)\n               if(value.name != this.username) \n               {\n                   console.log(value.name)\n                  \n                  return value;\n               }\n           });\n           console.log(\"hello:\"+this.online_users)\n       }, \n       join_room:function(data){\n           console.log(\"msgsksjdasjdask\")\n           console.log(data.msgs)    \n           this.messages=data.msgs;\n           console.log(this.messages[0].Message.username);\n           console.log(this.messages[0].Message.msg);\n           console.log(this.messages[0].Day);\n       this.username=data.data; \n       \n       this.SetUserName(this.username); \n     this.online_users = data.online_users.filter((value)=>{\n           console.log(this.username)\n               if(value.name != this.username)\n               {\n                   console.log(value)\n                  return value;\n               }      \n           });         \n           console.log(\"179 online users\");\n       console.log(typeof this.online_users)\n       console.log(this.online_users)    \n       console.log(\"no of online users\"+this.online_users.length) \n       },    \n       notification_msg:function(data){   \n          \n          console.log(data.data.msg)\n          if(data.data.msg.Message.username!=this.username){\n        var audio=new Audio('http://soundbible.com/mp3/Air Plane Ding-SoundBible.com-496729130.mp3');\n           audio.play();\n          \n          }\n           console.log(data.data.msg)\n           this.messages.push(data.data.msg);     \n\n       }, \n       notification_private:function(data){\n           var audio=new Audio('http://soundbible.com/mp3/Air Plane Ding-SoundBible.com-496729130.mp3');\n           console.log(\"audio\")\n           console.log(audio)\n           audio.play();\n           \n          this.messages_private.push(data.data);\n          console.log(this.messages_private.length)\n       }, \n       private_msg:function(data){\n           if(data.data.Message.username!=this.username){\n                \n            var audio=new Audio('http://soundbible.com/mp3/Air Plane Ding-SoundBible.com-496729130.mp3');\n           console.log(\"audio\")\n           console.log(audio)\n           audio.play();\n           }\n           console.log(\"private msgs hello hello \")\n           console.log(data.data);\n          this.messages_private.push(data.data);\n          console.log(this.isPublic)\n          if(this.isPublic){\n              this.online_users.filter((value)=>{\n                  console.log(value.name+\"==\"+data.data.Message.username);\n                  \n                  if(value.name == data.data.Message.username){\n                      value.unseen_msgs=value.unseen_msgs+1;  \n                      console.log(\"increased unseen\");\n                  } \n              })\n          }\n       },\n       leave:function(data){\n       this.online_users=data.online_users.filter((value)=>{\n               if(value.name != this.username  )\n               {\n                   console.log(value.username)  \n                   return value.username;\n               }\n           });     \n           \n       },\n       Private_Inbox:function(data){\n           this.messages_private=data.msgs;\n       }   \n    },       \n    mounted(){         \n        this.messages=[]; \n\n        this.chatRoom='Mobile Legends:Bang Bang';\n        \n        let data={     \n            room:this.chatRoom,    \n            token:localStorage.getItem('token')     \n        };  \n       this.$socket.emit('join_room',data); \n         \n      },\n \n    methods:{\n        ...mapActions({\n              set_challenger:'AsyncSetChallenger',     \n              SetStatus:'AsyncChallengeStatus',\n              SetUserName:'AsyncSetUserName',\n              StartChallenge:'AsyncStartChallenge'\n        }),\n\n\n\n        challenge_user(user){      \n             this.set_challenger({\n                 oponent:user,\n                 challenger:this.username\n             });\n             \n         this.$router.push('/h2h/mobile/mobilelegends/challenge');\n        },\n     \n     challenge_accepted(){ \n\n         this.$socket.emit('challenge_accepted',{    \n             \n             challenger:this.challenge_notification.challenger,\n             game:'Mobile Legends:Bang Bang',   \n             bet:this.challenge_notification.bet_ammount,\n             receiver:this.challenge_notification.challenger,\n             room:'Mobile Legends:Bang Bang',  \n              \n            });    \n\n            this.SetStatus('Started');  \n            \n         this.showChallengeNotification=false;\n\n         this.set_challenger({\n                 oponent:this.username,\n                 challenger:this.challenge_notification.challenger,\n                            });     \n   \n         this.$router.push('/h2h/mobile/mobilelegends/challenge');     \n\n        },  \n        challenge_rejected(){\n          this.$socket.emit('challenge_rejected',{ \n           challenger:this.challenge_notification.challenger,\n             game:\"Mobile Legends:Bang Bang\",   \n             bet:this.challenge_notification.bet_ammount,\n             room:'Mobile Legends:Bang Bang',    \n            });    \n         this.showChallengeNotification=false;\n        },\n\n\n\n\n        check_private_user(user){\n            console.log(user);\n          if(user==this.private_user){\n              return true;\n          }\n          else{\n              return false;\n          }\n        },\n       switch_to_public_chat(){\n            this.isPublic=true;\n            this.messages_private=[];  \n            this.private_user='';\n             this.messages=[]; \n\n        this.chatRoom='Mobile Legends:Bang Bang';\n        \n        let data={     \n            room:this.chatRoom,    \n            token:localStorage.getItem('token')     \n        };  \n       this.$socket.emit('join_room',data); \n       }, \n      send_msg(e){       \n          e.preventDefault();\n        console.log(this.message)\n        let data={  \n            msg:this.message,    \n            room:'Mobile Legends:Bang Bang',    \n            token:localStorage.getItem('token')  \n        }\n        this.message='';\n        this.$socket.emit('public_msg',data);   \n    \n        \n      },\n      send_private_msg(e){\n            console.log(this.private_user)\n            e.preventDefault();  \n            let data={\n            msg:this.message,  \n            room:'Mobile Legends:Bang Bang',    \n            token:localStorage.getItem('token'),\n            receiver:this.private_user,\n            }\n             \n            this.$socket.emit('private_msg',data);  \n             this.message='';  \n             console.log(\"155:\"+this.message);  \n      },   \n      private_chat(name){\n             console.log(\"name:\"+name.name)\n             this.private_user=name.name;\n             this.isPublic=false;       \n             \n             let data={\n                token:localStorage.getItem('token'),\n                 username:name.name,\n                 room:'Mobile Legends:Bang Bang'\n             }\n             this.$socket.emit('private_inbox',data);\n      },       \n        getClass(data){ \n            \n             if(data.type=='notification'){\n                 this.self=true;\n               return 'notification'\n           }       \n          else if(data.name==this.username){\n              this.self=true;\n            return 'self'\n            }\n           else{\n               this.self=false;\n               return 'other'\n           }    \n         \n        }\n      \n  \n    }\n}\n</script>\n<style scoped>\n\n/* PROFILE MENU */\n\n\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n.dropdown-content a:hover {background-color: #ddd;}\n\n/* Show the dropdown menu on hover */\n.dropdown:hover .dropdown-content {display: block;}\n\n/* Change the background color of the dropdown button when the dropdown content is shown */\n.dropdown:hover .dropbtn {background-color: #3e8e41;}\n\n/****OTHER CSS****/\n.headshot {\n\tflex-shrink: 0;\n\tmargin: 20px;\n\theight: calc(150px + 6vw);\n\twidth: calc(150px + 6vw);\n\tborder: calc(8px + 0.2vw) solid transparent;\n\tbackground-origin: border-box;\n\tbackground-clip: content-box, border-box;\n\tbackground-size: cover;\n\tbox-sizing: border-box;\n\tbox-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.5);\n}\n\n.headshot-1 {\n\tborder-radius: 30%;\n\tbackground-image: var(--img-url), linear-gradient(#f9f047, #0fd850);\n}\n.avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n#public-inbox{\n     \n}\n.private-chat-box{\n background-color: white;\n border-color: black;\n border-style: solid;\n width: 100%;\n height: 300px; \n color: black;    \n overflow-y: auto;\n}\n.chat-box{\n background-color: white;\n width: 100%;\n height: 300px; \n color: black; \n overflow-y: auto;\n}\n.form{\n    display: flex;\n    flex-direction: row;\n    margin: 1%;\n}\n.write-msg-field{ \n    background-color: white;\n    color: #0081FF;\n    width: 100%;\n}\n.msg{\n    color:black; \n}\n.self{\n    text-align: right;\n    color: white;\n    position: relative; \n\tbackground: #4267B2;\n    border-radius: .6em;\n    margin: 1%;\n    padding-right: 10px;\n}\n\n\n.other{\n    text-align: left;\n    \tposition: relative;\n\tbackground: #F5F6F7;\n    border-radius: .4em;\n    color: #4267B2;\n    margin: 1%;\n    \n}\n\n.notification{\n    text-align: center;   \n}\nli{\nlist-style: none;\nmargin: 1%;\nwidth: 153%;\npadding-right: 130px;\nposition: relative;\nright: 43px;\n\n}\n.online_users_list_item{\n    float: left;\n}\n.chat_button_for_list_item{\n    float: right;\n}\n.heading-800 {\n    background-color: #222222;\n    color: #fff;\n    border-radius: 20px;\n     padding: 10px 0 10px 0px;\n}\n\n</style>\n"]}]}