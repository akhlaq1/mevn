{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamAchievement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamAchievement.vue","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from \"@/services/RestService\"\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as moment from 'moment'\n\nexport default {\n  name: \"edit-team\",\n  props: ['modalProps'],\n  data() {\n    return {\n      load: false,\n      file: null,\n      form: {},\n      moment\n    }\n  },\n  computed: {\n    ...mapGetters({\n      team: 'team/activeTeam'\n    }),\n  },\n  methods: {\n    ...mapActions({\n      updateTeam: 'team/updateTeam'\n    }),\n    async submit() {\n      console.log(\"submitting\");\n      let that = this;\n      that.load = true;\n\n      var upload = '';\n\n      if(this.file)\n      {\n        let formData = new FormData();\n        formData.append(\"file\", this.file);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        this.form.imgPath = upload.data.url;\n      }\n\n      if(this.modalProps && !isNaN(this.modalProps.model)) \n        this.team.achievements.splice(this.modalProps.model, 1,{...this.form});\n      else\n      this.team.achievements.push(this.form);\n\n      this.updateTeam({achievements: this.team.achievements})\n        .then(res => this.$emit('finish'))\n        .catch(err => this.$emit('finish'));\n    }\n  },\n  mounted() {\n    if(this.modalProps && !isNaN(this.modalProps.model))\n    {\n      this.form = {...this.team.achievements[this.modalProps.model]};\n      this.form.dateOfAchievement = moment(this.form.dateOfAchievement).format('DD-MM-YYYY');\n    }\n    else\n      this.form = {}\n  }\n}\n",{"version":3,"sources":["TeamAchievement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TeamAchievement.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div>\n    <b-form @submit.prevent=\"submit($event)\">\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Tounrnament Name:\"\n                    label-for=\"tournamentName\">\n        <b-form-input id=\"tournamentName\"\n                      type=\"text\"\n                      v-model=\"form.tournamentName\"\n                      placeholder=\"Enter tournament name\"\n                      required>\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Achivement name:\"\n                    label-for=\"acheivementName\">\n        <b-form-input id=\"acheivementName\"\n                      type=\"text\"\n                      v-model=\"form.achievementName\"\n                      placeholder=\"Enter achievement name\"\n                      required>\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Venue name:\"\n                    label-for=\"venueOfAcheivemnet\">\n        <b-form-input id=\"venueOfAcheivemnet\"\n                      type=\"text\"\n                      v-model=\"form.venueOfAchievemnet\"\n                      placeholder=\"Enter achievement venue\"\n                      required>\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Achievement Date:\"\n                    label-for=\"dateOfAcheivement\">\n        <b-form-input id=\"dateOfAcheivement\"\n                      type=\"date\"\n                      v-model=\"form.dateOfAchievement\"\n                      placeholder=\"Enter achievement date\"\n                      required>\n        </b-form-input>\n      </b-form-group>\n      <!-- Styled -->\n      <b-form-file v-model=\"file\" :state=\"Boolean(file)\" placeholder=\"Choose file photo\"></b-form-file>\n      <div v-if=\"file\" class=\"mt-3\">Selected file: {{file && file.name}} <i @click=\"file = null\" class=\"fa fa-close pointer\"></i></div>\n\n      <div style=\"margin-top: 20px; text-align: right\">\n        <div v-if=\"load\" class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport api from \"@/services/RestService\"\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as moment from 'moment'\n\nexport default {\n  name: \"edit-team\",\n  props: ['modalProps'],\n  data() {\n    return {\n      load: false,\n      file: null,\n      form: {},\n      moment\n    }\n  },\n  computed: {\n    ...mapGetters({\n      team: 'team/activeTeam'\n    }),\n  },\n  methods: {\n    ...mapActions({\n      updateTeam: 'team/updateTeam'\n    }),\n    async submit() {\n      console.log(\"submitting\");\n      let that = this;\n      that.load = true;\n\n      var upload = '';\n\n      if(this.file)\n      {\n        let formData = new FormData();\n        formData.append(\"file\", this.file);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        this.form.imgPath = upload.data.url;\n      }\n\n      if(this.modalProps && !isNaN(this.modalProps.model)) \n        this.team.achievements.splice(this.modalProps.model, 1,{...this.form});\n      else\n      this.team.achievements.push(this.form);\n\n      this.updateTeam({achievements: this.team.achievements})\n        .then(res => this.$emit('finish'))\n        .catch(err => this.$emit('finish'));\n    }\n  },\n  mounted() {\n    if(this.modalProps && !isNaN(this.modalProps.model))\n    {\n      this.form = {...this.team.achievements[this.modalProps.model]};\n      this.form.dateOfAchievement = moment(this.form.dateOfAchievement).format('DD-MM-YYYY');\n    }\n    else\n      this.form = {}\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}