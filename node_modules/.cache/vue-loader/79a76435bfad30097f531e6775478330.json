{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/views/Login.vue","mtime":1560173403559},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport VueAxios from 'vue-axios'\nimport VueAuthenticate from 'vue-authenticate'\nimport axios from 'axios';\n\nVue.use(VueAxios, axios)\n\nVue.use(VueAuthenticate, {\n    baseUrl: 'http://localhost:3000/api/users', // Your API domain\n    \n    providers: {\n    facebook: {\n        tokenName: 'token',\n        response_type: 'token',\n        scope: ['email'],\n        // clientId: '417348775457290',\n        // clientSecret: 'f3d7ddd33c363a6439ed699884c24885',\n        appId: '291462354808106',\n        clientId: '291462354808106',\n        clientSecret: '44c44d786601319553fa31e097b24d85',\n        // redirectUri: 'http://www.wagergames.co/auth/callback' // Your client app URL\n        redirectUri: 'http://localhost:8080/auth/callback' // Your client app URL\n    }\n    }\n})\n\nexport default {\n    name: 'Login',\n    data() {\n        return {\n            email: '',\n            password: '',\n            error: null,\n        }\n    },\n    methods: {\n        metamask() {\n            if (!window.web3) {\n                window.alert('Please install MetaMask first.');\n                return;\n            }\n            if (!web3) {\n                // We don't know window.web3 version, so we use our own instance of web3\n                // with provider given by window.web3\n                web3 = new Web3(window.web3.currentProvider);\n            }\n            if (!web3.eth.coinbase) {\n                window.alert('Please activate MetaMask first.');\n                return;\n            }\n            const publicAddress = web3.eth.coinbase.toLowerCase();\n            this.loginMeta(publicAddress);\n            // this.setState({ loading: true });\n            // console.log( publicAddress );\n        },\n        getUserData() {\n\n        },\n        onLogout() {\n\n        },\n        login() {\n            this.$store.dispatch('retriveToken', {\n                    email: this.email,\n                    password: this.password\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n        authenticate: function (provider) {\n\n            if (this.$auth.isAuthenticated()) {\n                this.$auth.logout()\n            }\n\n            this.response = null\n\n            var this_ = this;\n            console.log(\"first\");\n\n            this.$auth.authenticate(provider).then(function (authResponse) {\n                var data = null;\n\n                var xhr = new XMLHttpRequest();\n                //xhr.withCredentials = true;\n                var that = this_;\n\n                xhr.addEventListener(\"readystatechange\", function (this_) {\n                    if (this.readyState === 4) {\n                        that.getFbDetails(JSON.parse(this.response).access_token);\n                    }\n                });\n\n                xhr.open(\"GET\", \"https://graph.facebook.com/v3.2/oauth/access_token?code=\"+this_.$auth.getToken()+\"&client_id=291462354808106&redirect_uri=http://localhost:8080/auth/callback&client_secret=44c44d786601319553fa31e097b24d85\");\n\n                xhr.send(data);\n            }).catch(function (err) {\n              this_.response = err\n            })\n        },\n        getFbDetails(accesstoken)\n        {\n            var this_ = this;\n            axios.get('https://graph.facebook.com/v3.2/me?fields=id,name,email,picture{url}&access_token=' + accesstoken).then(function (response) {\n                    this_.response = response;\n                    this_.$store.dispatch(\"retriveTokenSocial\", {\n                        username: response.data.name,\n                        email: response.data.email,\n                        provider: 'facebook',\n                        photoUrl: response.data.picture.data.url\n                    })\n                    .then(response => {\n                        this_.$router.push({\n                            name: 'home'\n                        });\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n                    //this_.loginFB( response.data );\n                })\n                .catch(err => console.log(err))\n        },\n        loginMeta(address) {\n            this.$store.dispatch('retriveTokenMeta', {\n                    address: address\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n\n        loginFB(data) {\n            this.$store.dispatch('retriveTokenFB', {\n                    id: data.id,\n                    email: data.email,\n                    name: data.name\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n\n        loginTwitch(data) {\n            this.$store.dispatch('retriveTokenTwitch', {\n                    name: data.name,\n                    email: data.email,\n                    id: data._id,\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n    },\n    beforeMount() {\n        var this_ = this;\n        let AddStyle = document.createElement('link')\n        AddStyle.type = \"text/css\";\n        AddStyle.rel = \"stylesheet\";\n        AddStyle.href = \"css/auth.css\";\n        AddStyle.id = \"auth\";\n        document.head.appendChild(AddStyle)\n\n        const parsedParams = {};\n        window.location.hash.split('&')\n            .map(part => part.replace(/#/, ''))\n            .forEach(param => {\n                const parts = param.split('=');\n                parsedParams[parts[0]] = parts[1];\n            })\n\n        console.log('--- Out')\n        if (parsedParams.access_token != undefined) {\n            console.log('--- In')\n            this.$http.get('https://api.twitch.tv/kraken/user', {\n                params: {},\n                headers: {\n                    'Client-ID': 'g3hz4vlsl4062b4s8v81v1emky74aj',\n                    'Authorization': `OAuth ${parsedParams.access_token}`\n                }\n            }).then(function (response) {\n                this_.loginTwitch(response.data);\n                // this_.loginFB( response.data );\n            })\n        }\n        // console.log(parsedParams);\n\n    },\n    beforeDestroy() {\n        document.getElementById(\"auth\").disabled = true;\n        var stylesheet = document.getElementById('auth');\n        stylesheet.parentNode.removeChild(stylesheet);\n    },\n    mounted() {\n        // this.FB;\n        // login(function(response) {\n        //     if (response.authResponse) {\n        //     console.log('Welcome!  Fetching your information.... ');\n        //     FB.api('/me', function(response) {\n        //     console.log('Good to see you, ' + response.name + '.');\n        //     });\n        //     } else {\n        //     console.log('User cancelled login or did not fully authorize.');\n        //     }\n        // });\n    }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n   <div>\n       <div class=\"logo-section\">\n    <img src=\"img/logo.png\" class=\"img-logo\">\n   \n\n    \n        <!-- <div class=\"alert alert-success\" style=\"color: #ffffff;\">\n            \n        </div>\n   \n        <div class=\"alert alert-warning\" style=\"color: #ffffff;\">\n            \n        </div> -->\n    \n</div>\n<div class=\"main-w3layouts-form\">\n    <h2>Login to your account</h2>\n\n    <!-- main-w3layouts-form -->\n    <form @submit.prevent=\"login\" aria-label=\"Login\">\n       \n        <div class=\"fields-w3-agileits\">\n            <span class=\"fa fa-envelope\" aria-hidden=\"true\"></span>\n            <input v-model=\"email\" id=\"email\" type=\"email\" class=\"form-control\" name=\"email\" value=\"\" required autofocus placeholder=\"email\">\n\n        </div>\n       \n            <span class=\"invalid-feedback\" role=\"alert\" style=\"color: red; margin-bottom: 10px; display: block;\">\n                                        <strong v-if=\"error\">{{ error }}</strong>\n                                    </span>\n       \n        <div class=\"fields-w3-agileits\">\n            <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\n            <input v-model=\"password\" id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" required placeholder=\"password\">\n        </div>\n       \n        <div class=\"remember-section-wthree\">\n            <ul>\n                <li>\n                    <label class=\"anim\">\n                        <input class=\"form-check-input checkbox\" type=\"checkbox\" name=\"remember\" id=\"remember\">\n\n                        <label style=\"    color: #fff;\n    padding: 7px;\" class=\"form-check-label\" for=\"remember\">\n                            Remember Me\n                        </label>\n\n                    </label>\n                </li>\n                <li> <a class=\"btn btn-link\" href=\"#\">\n                        Forgot Your Password?\n                    </a> </li>\n            </ul>\n            <div class=\"clear\"> </div>\n            <input type=\"submit\" value=\"Login\" />\n        </div>\n    </form>\n    <!--// main-w3layouts-form -->\n    <!-- Social icons -->\n    <div class=\"footer_grid-w3ls\">\n        <button class=\"btn btn-primary\" @click=\"metamask()\">Login with Metamask</button>\n    </div>\n    <div class=\"footer_grid-w3ls\">\n        <h5 class=\"sub-hdg-w3l\">or login with your social profile</h5>\n        <ul class=\"social-icons-agileits-w3layouts\">\n            <li><a @click=\"authenticate('facebook')\" class=\"fa fa-facebook\"></a></li>\n            <li><a href=\"https://id.twitch.tv/oauth2/authorize?client_id=n9se5ttv1djl68jpjcib9vhzv5l6fy&redirect_uri=http://localhost:8080/login&response_type=token&scope=user_read\" class=\"fa fa-twitch\"></a></li>\n            <li><a href=\"http://localhost:4000/api/users/auth/steam\" class=\"fa fa-steam\"></a></li>\n            <!-- <li><a @click.prevent=\"loginWithTwitch\" class=\"fa fa-twitch\"></a></li> -->\n\n        </ul>\n    </div>\n    <!--// Social icons -->\n</div>\n   </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport VueAxios from 'vue-axios'\nimport VueAuthenticate from 'vue-authenticate'\nimport axios from 'axios';\n\nVue.use(VueAxios, axios)\n\nVue.use(VueAuthenticate, {\n    baseUrl: 'http://localhost:3000/api/users', // Your API domain\n    \n    providers: {\n    facebook: {\n        tokenName: 'token',\n        response_type: 'token',\n        scope: ['email'],\n        // clientId: '417348775457290',\n        // clientSecret: 'f3d7ddd33c363a6439ed699884c24885',\n        appId: '291462354808106',\n        clientId: '291462354808106',\n        clientSecret: '44c44d786601319553fa31e097b24d85',\n        // redirectUri: 'http://www.wagergames.co/auth/callback' // Your client app URL\n        redirectUri: 'http://localhost:8080/auth/callback' // Your client app URL\n    }\n    }\n})\n\nexport default {\n    name: 'Login',\n    data() {\n        return {\n            email: '',\n            password: '',\n            error: null,\n        }\n    },\n    methods: {\n        metamask() {\n            if (!window.web3) {\n                window.alert('Please install MetaMask first.');\n                return;\n            }\n            if (!web3) {\n                // We don't know window.web3 version, so we use our own instance of web3\n                // with provider given by window.web3\n                web3 = new Web3(window.web3.currentProvider);\n            }\n            if (!web3.eth.coinbase) {\n                window.alert('Please activate MetaMask first.');\n                return;\n            }\n            const publicAddress = web3.eth.coinbase.toLowerCase();\n            this.loginMeta(publicAddress);\n            // this.setState({ loading: true });\n            // console.log( publicAddress );\n        },\n        getUserData() {\n\n        },\n        onLogout() {\n\n        },\n        login() {\n            this.$store.dispatch('retriveToken', {\n                    email: this.email,\n                    password: this.password\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n        authenticate: function (provider) {\n\n            if (this.$auth.isAuthenticated()) {\n                this.$auth.logout()\n            }\n\n            this.response = null\n\n            var this_ = this;\n            console.log(\"first\");\n\n            this.$auth.authenticate(provider).then(function (authResponse) {\n                var data = null;\n\n                var xhr = new XMLHttpRequest();\n                //xhr.withCredentials = true;\n                var that = this_;\n\n                xhr.addEventListener(\"readystatechange\", function (this_) {\n                    if (this.readyState === 4) {\n                        that.getFbDetails(JSON.parse(this.response).access_token);\n                    }\n                });\n\n                xhr.open(\"GET\", \"https://graph.facebook.com/v3.2/oauth/access_token?code=\"+this_.$auth.getToken()+\"&client_id=291462354808106&redirect_uri=http://localhost:8080/auth/callback&client_secret=44c44d786601319553fa31e097b24d85\");\n\n                xhr.send(data);\n            }).catch(function (err) {\n              this_.response = err\n            })\n        },\n        getFbDetails(accesstoken)\n        {\n            var this_ = this;\n            axios.get('https://graph.facebook.com/v3.2/me?fields=id,name,email,picture{url}&access_token=' + accesstoken).then(function (response) {\n                    this_.response = response;\n                    this_.$store.dispatch(\"retriveTokenSocial\", {\n                        username: response.data.name,\n                        email: response.data.email,\n                        provider: 'facebook',\n                        photoUrl: response.data.picture.data.url\n                    })\n                    .then(response => {\n                        this_.$router.push({\n                            name: 'home'\n                        });\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n                    //this_.loginFB( response.data );\n                })\n                .catch(err => console.log(err))\n        },\n        loginMeta(address) {\n            this.$store.dispatch('retriveTokenMeta', {\n                    address: address\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n\n        loginFB(data) {\n            this.$store.dispatch('retriveTokenFB', {\n                    id: data.id,\n                    email: data.email,\n                    name: data.name\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n\n        loginTwitch(data) {\n            this.$store.dispatch('retriveTokenTwitch', {\n                    name: data.name,\n                    email: data.email,\n                    id: data._id,\n                })\n                .then(response => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(error => {\n                    this.error = \"These credentials do not match our records.\";\n                    console.log(error);\n                });\n        },\n    },\n    beforeMount() {\n        var this_ = this;\n        let AddStyle = document.createElement('link')\n        AddStyle.type = \"text/css\";\n        AddStyle.rel = \"stylesheet\";\n        AddStyle.href = \"css/auth.css\";\n        AddStyle.id = \"auth\";\n        document.head.appendChild(AddStyle)\n\n        const parsedParams = {};\n        window.location.hash.split('&')\n            .map(part => part.replace(/#/, ''))\n            .forEach(param => {\n                const parts = param.split('=');\n                parsedParams[parts[0]] = parts[1];\n            })\n\n        console.log('--- Out')\n        if (parsedParams.access_token != undefined) {\n            console.log('--- In')\n            this.$http.get('https://api.twitch.tv/kraken/user', {\n                params: {},\n                headers: {\n                    'Client-ID': 'g3hz4vlsl4062b4s8v81v1emky74aj',\n                    'Authorization': `OAuth ${parsedParams.access_token}`\n                }\n            }).then(function (response) {\n                this_.loginTwitch(response.data);\n                // this_.loginFB( response.data );\n            })\n        }\n        // console.log(parsedParams);\n\n    },\n    beforeDestroy() {\n        document.getElementById(\"auth\").disabled = true;\n        var stylesheet = document.getElementById('auth');\n        stylesheet.parentNode.removeChild(stylesheet);\n    },\n    mounted() {\n        // this.FB;\n        // login(function(response) {\n        //     if (response.authResponse) {\n        //     console.log('Welcome!  Fetching your information.... ');\n        //     FB.api('/me', function(response) {\n        //     console.log('Good to see you, ' + response.name + '.');\n        //     });\n        //     } else {\n        //     console.log('User cancelled login or did not fully authorize.');\n        //     }\n        // });\n    }\n}\n</script>\n\n\n\n                // axios.get('https://graph.facebook.com/v3.2/oauth/access_token?code='+this_.$auth.getToken()+'&client_id=291462354808106&redirect_uri=http://localhost:8080/auth/callback&client_secret=44c44d786601319553fa31e097b24d85',\n                // {\n                //     headers: { \n                //         \"Postman-Token\": \"3c124eae-d9c3-4325-8f43-93c4bc743694\",\n                //         \"Cache-Control\": \"no-cache\",\n                //         \"authorization\": this_.$auth.getToken()\n                //     } \n                // })\n                // .then(res => console.log(res))\n                // // axios.get('https://graph.facebook.com/v3.2/me?fields=id,name&access_token=' + this_.$auth.getToken()).then(function (response) {\n                // //         this_.response = response;\n                // //         console.log(response);\n                // //         //this_.loginFB( response.data );\n                // //     })\n                // //     .catch(err => console.log(err))\n                \n            \n            // //console.log(FB);\n            // FB.login(function(response) {\n            //     if (response.authResponse) {\n            //     console.log('Welcome!  Fetching your information.... ');\n            //     FB.api('/me', function(response) {\n            //     console.log(response);\n            //     });\n            //     } else {\n            //     console.log('User cancelled login or did not fully authorize.');\n            //     }\n            // }, {scope: 'email'}   );\n            // return;"]}]}