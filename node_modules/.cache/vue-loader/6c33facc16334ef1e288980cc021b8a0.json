{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamProduct.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/forms/TeamProduct.vue","mtime":1560173403555},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from \"@/services/RestService\"\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"edit-team-product\",\n  props: ['data', 'modalProps'],\n  computed: {\n    ...mapGetters({\n      team: 'team/activeTeam'\n    }),\n  },\n  data() {\n    return {\n      load: false,\n      file: null,\n      form: {}\n    }\n  },\n  methods: {  \n    ...mapActions({\n      updateTeam: 'team/updateTeam'\n    }),\n    async submit() {\n      console.log(\"submitting\");\n      let that = this;\n      that.load = true;\n      var upload = null;\n\n      if(this.file) {\n        let formData = new FormData();\n        formData.append(\"file\", this.file);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.image = upload.data.url;\n      }\n\n      if(this.modalProps && !isNaN(this.modalProps.model)) \n        this.team.products.splice(this.modalProps.model, 1,{...this.form});\n      else\n      this.team.products.push(this.form);\n\n      this.updateTeam({products: this.team.products})\n        .then(res => this.$emit('finish'))\n        .catch(err => this.$emit('finish'));\n    }\n  },\n    mounted() {\n      if(this.modalProps && !isNaN(this.modalProps.model))\n      {\n        this.form = {...this.team.products[this.modalProps.model]};\n      }\n      else\n        this.form = {}\n    }\n}\n",{"version":3,"sources":["TeamProduct.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TeamProduct.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div>\n    <b-form @submit.prevent=\"submit\">\n      <b-form-group id=\"exampleInputGroup1\"\n                    label=\"Product name:\"\n                    label-for=\"name\">\n        <b-form-input id=\"name\"\n                      type=\"text\"\n                      v-model=\"form.productName\"\n                      placeholder=\"Enter name\"\n                      required>\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"date\"\n                    label=\"Product price\"\n                    label-for=\"date\">\n        <b-form-input id=\"date\"\n                      type=\"number\"\n                      v-model=\"form.price\"\n                      placeholder=\"product price\"\n                      required>\n        </b-form-input>\n      </b-form-group>\n      <b-form-group id=\"link\"\n                    label=\"Product Website\"\n                    label-for=\"link\">\n        <b-form-input id=\"link\"\n                      type=\"url\"\n                      v-model=\"form.buy\"\n                      placeholder=\"product website\"\n                      required>\n        </b-form-input>\n      </b-form-group>\n      <!-- Styled -->\n      <b-form-file v-model=\"file\" :state=\"Boolean(file)\" placeholder=\"Product image\"></b-form-file>\n      <div v-if=\"file\" class=\"mt-3\">Selected file: {{file && file.name}}</div>\n\n      <div style=\"margin-top: 20px; text-align: right\">\n        <div v-if=\"load\" class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        <b-button type=\"submit\" variant=\"primary\">Update</b-button>\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport api from \"@/services/RestService\"\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"edit-team-product\",\n  props: ['data', 'modalProps'],\n  computed: {\n    ...mapGetters({\n      team: 'team/activeTeam'\n    }),\n  },\n  data() {\n    return {\n      load: false,\n      file: null,\n      form: {}\n    }\n  },\n  methods: {  \n    ...mapActions({\n      updateTeam: 'team/updateTeam'\n    }),\n    async submit() {\n      console.log(\"submitting\");\n      let that = this;\n      that.load = true;\n      var upload = null;\n\n      if(this.file) {\n        let formData = new FormData();\n        formData.append(\"file\", this.file);\n        upload = await api.postMultipart(\"/api/file/upload\", formData );\n        if(upload.data.url)\n          this.form.image = upload.data.url;\n      }\n\n      if(this.modalProps && !isNaN(this.modalProps.model)) \n        this.team.products.splice(this.modalProps.model, 1,{...this.form});\n      else\n      this.team.products.push(this.form);\n\n      this.updateTeam({products: this.team.products})\n        .then(res => this.$emit('finish'))\n        .catch(err => this.$emit('finish'));\n    }\n  },\n    mounted() {\n      if(this.modalProps && !isNaN(this.modalProps.model))\n      {\n        this.form = {...this.team.products[this.modalProps.model]};\n      }\n      else\n        this.form = {}\n    }\n}\n</script>\n\n"]}]}