{"remainingRequest":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Schedule/EventForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/src/components/Schedule/EventForm.vue","mtime":1560173403551},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/babel-loader/lib/index.js","mtime":1556985451660},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/cache-loader/dist/cjs.js","mtime":1560173719903},{"path":"/home/ubuntu/Documents/akhlaq_fiverr/MEVN/cleaned/node_modules/vue-loader/lib/index.js","mtime":1560173721357}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DatePicker from \"vuejs-datepicker\";\nimport format from \"date-fns/format\";\nimport ColorPicker from \"./ColorPicker\";\n\nexport default {\n  name: \"EventForm\",\n  model: {\n    prop: \"eventData\",\n    event: \"updateEvent\"\n  },\n  props: {\n    eventData: {\n      type: Object,\n      default: () => ({\n        eventId: \"\",\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        cssClass: \"\",\n        data: {\n          description: \"\"\n        }\n      })\n    },\n    showButtons: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      event: JSON.parse(JSON.stringify(this.eventData))\n    };\n  },\n  watch: {\n    eventData: {\n      immediate: true,\n      handler(newValue) {\n        this.event = JSON.parse(JSON.stringify(newValue));\n      }\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      const start = format(this.event.start, \"YYYY-MM-DD\");\n      const end = format(this.event.end, \"YYYY-MM-DD\");\n      const event = {\n        ...this.event,\n        start,\n        end\n      };\n      const req = await fetch(\"http://localhost:4000/schedule\", {\n        method: \"POST\",\n        body: JSON.stringify(event),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      });\n      const res = await req.json();\n      this.resetValues();\n    },\n    selectColor(color) {\n      this.event = {\n        ...this.event,\n        cssClass: color\n      };\n      this.$emit(\"updateEvent\", this.event);\n    },\n    resetValues() {\n      this.event = {\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        cssClass: \"\",\n        data: {\n          description: \"\"\n        }\n      };\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  },\n  components: {\n    DatePicker,\n    ColorPicker\n  }\n};\n",{"version":3,"sources":["EventForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EventForm.vue","sourceRoot":"src/components/Schedule","sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <div class=\"input-holder\">\n      <input\n        type=\"text\"\n        placeholder=\"Event title\"\n        v-model=\"event.title\"\n        @change=\"$emit('updateEvent', event)\"\n      >\n    </div>\n    <div class=\"input-holder\">\n      <date-picker\n        :placeholder=\"'Start date'\"\n        v-model=\"event.start\"\n        @change=\"$emit('updateEvent', event)\"\n      />\n    </div>\n    <div class=\"input-holder\">\n      <date-picker\n        :placeholder=\"'End date'\"\n        v-model=\"event.end\"\n        @change=\"$emit('updateEvent', event)\"\n      />\n    </div>\n    <div class=\"input-holder\">\n      <textarea\n        placeholder=\"Event description\"\n        rows=\"4\"\n        v-model=\"event.data.description\"\n        @change=\"$emit('updateEvent', event)\"\n      ></textarea>\n    </div>\n    <div class=\"input-holder\">\n      <color-picker @colorPicked=\"selectColor\" :color=\"event.cssClass\"/>\n    </div>\n    <div class=\"input-holder\" v-if=\"showButtons\">\n      <b-button type=\"submit\">Schedule</b-button>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n      <b-button type=\"back\" @click.prevent=\"goBack()\">Go back</b-button>\n    </div>\n  </form>\n</template>\n\n\n<script>\nimport DatePicker from \"vuejs-datepicker\";\nimport format from \"date-fns/format\";\nimport ColorPicker from \"./ColorPicker\";\n\nexport default {\n  name: \"EventForm\",\n  model: {\n    prop: \"eventData\",\n    event: \"updateEvent\"\n  },\n  props: {\n    eventData: {\n      type: Object,\n      default: () => ({\n        eventId: \"\",\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        cssClass: \"\",\n        data: {\n          description: \"\"\n        }\n      })\n    },\n    showButtons: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      event: JSON.parse(JSON.stringify(this.eventData))\n    };\n  },\n  watch: {\n    eventData: {\n      immediate: true,\n      handler(newValue) {\n        this.event = JSON.parse(JSON.stringify(newValue));\n      }\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      const start = format(this.event.start, \"YYYY-MM-DD\");\n      const end = format(this.event.end, \"YYYY-MM-DD\");\n      const event = {\n        ...this.event,\n        start,\n        end\n      };\n      const req = await fetch(\"http://localhost:4000/schedule\", {\n        method: \"POST\",\n        body: JSON.stringify(event),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      });\n      const res = await req.json();\n      this.resetValues();\n    },\n    selectColor(color) {\n      this.event = {\n        ...this.event,\n        cssClass: color\n      };\n      this.$emit(\"updateEvent\", this.event);\n    },\n    resetValues() {\n      this.event = {\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        cssClass: \"\",\n        data: {\n          description: \"\"\n        }\n      };\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  },\n  components: {\n    DatePicker,\n    ColorPicker\n  }\n};\n</script>\n\n\n<style>\nform {\n  display: flex;\n  flex-direction: column;\n  margin-left: 30px;\n}\n.input-holder {\n  margin: 10px 0;\n  display: flex;\n  justify-content: flex-start;\n}\n.vdp-datepicker {\n  width: 100%;\n}\n.vdp-datepicker > div > input {\n  width: 77%;\n}\n.input-holder > button {\n  justify-self: center;\n  padding: 12px 25px;\n  border-radius: 0;\n  text-transform: uppercase;\n  font-weight: 600;\n  background: orangered;\n  color: white;\n  border: none;\n  font-size: 14px;\n  letter-spacing: -0.1px;\n  cursor: pointer;\n}\ninput,\ntextarea {\n  padding: 12px 15px;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0;\n  width: 70%;\n  opacity: 0.8;\n  font-size: 15px;\n  font-weight: normal;\n}\ninput:focus,\ntextarea:focus,\nbutton:focus {\n  border: 2px solid orangered;\n  outline: none;\n  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.2);\n}\n</style>\n"]}]}